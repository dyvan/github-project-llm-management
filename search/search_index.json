{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Project LLM Management","text":"<p>Welcome to the GitHub-based Project Management with LLM Agents template!</p> <p>This is a comprehensive, production-ready template for managing software projects using:</p> <ul> <li>\ud83c\udfd7\ufe0f GitHub Projects v2 for centralized tracking</li> <li>\ud83e\udd16 LLM Agents (Claude, ChatGPT, Gemini) for automation</li> <li>\ud83d\udd04 GitHub Actions for CI/CD and workflows</li> <li>\ud83d\udc65 Human oversight via a central Project Board</li> </ul>"},{"location":"#key-features","title":"\ud83c\udfaf Key Features","text":""},{"location":"#automated-workflows","title":"Automated Workflows","text":"<ul> <li>Branch Creator: Automatically creates feature branches when issues receive the <code>auto-branch</code> label</li> <li>Code Reviewer: AI-powered code reviews on pull requests</li> <li>Test Feedback: Automated testing, linting, and coverage reporting</li> </ul>"},{"location":"#project-management","title":"Project Management","text":"<ul> <li>Backlog View: All future work, sorted by priority</li> <li>Priority Board: Kanban-style tracking by status</li> <li>Team Items: Personalized view filtered by owner</li> </ul>"},{"location":"#integration","title":"Integration","text":"<ul> <li>Seamless GitHub Projects v2 integration</li> <li>Multiple LLM provider support (Anthropic Claude, OpenAI, Google Gemini)</li> <li>Full CI/CD pipeline with automatic status updates</li> </ul>"},{"location":"#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"#1-prerequisites","title":"1. Prerequisites","text":"<ul> <li>Git</li> <li>GitHub account with admin access</li> <li>GitHub CLI (<code>gh</code>)</li> <li>Python 3.11+ (if using Python workflows)</li> </ul>"},{"location":"#2-clonefork-this-template","title":"2. Clone/Fork this template","text":"<pre><code>git clone https://github.com/your-org/project-llm-management.git\ncd project-llm-management\n</code></pre>"},{"location":"#3-configure-github-secrets","title":"3. Configure GitHub Secrets","text":"<p>Go to Settings \u2192 Secrets and variables \u2192 Actions and add: - <code>CLAUDE_API_KEY</code> (for code review) - <code>GH_TOKEN</code> (GitHub token with repo access)</p>"},{"location":"#4-enable-github-projects-v2","title":"4. Enable GitHub Projects v2","text":"<ul> <li>Navigate to your repository's Projects tab</li> <li>Click New project and select Table or Board</li> <li>Workflows will sync project updates automatically</li> </ul>"},{"location":"#5-create-your-first-issue","title":"5. Create your first issue","text":"<ul> <li>Use one of the provided templates (Feature, Bug, Task)</li> <li>Add the <code>auto-branch</code> label</li> <li>A branch will be created automatically!</li> </ul>"},{"location":"#documentation-structure","title":"\ud83d\udcda Documentation Structure","text":"<ul> <li>Getting Started: Setup and first steps</li> <li>Architecture: System design and components</li> <li>Guides: How to use each feature</li> <li>Agents: LLM agent documentation</li> </ul>"},{"location":"#how-it-works","title":"\ud83e\udd16 How It Works","text":"<pre><code>graph TD\n    A[\"Create Issue&lt;br/&gt;+ auto-branch label\"] --&gt;|GitHub Actions| B[\"Branch Creator&lt;br/&gt;Creates feat/123-title\"]\n    B --&gt; C[\"Develop Locally\"]\n    C --&gt; D[\"Push &amp; Create PR\"]\n    D --&gt;|GitHub Actions| E[\"Code Reviewer&lt;br/&gt;Claude analyzes code\"]\n    D --&gt;|GitHub Actions| F[\"CI Tests&lt;br/&gt;Run tests &amp; lint\"]\n    E --&gt; G[\"Post Comments\"]\n    F --&gt; H[\"Report Results\"]\n    G --&gt; I[\"Developer Reviews&lt;br/&gt;&amp; Fixes\"]\n    H --&gt; I\n    I --&gt;|Ready| J[\"Merge to develop\"]\n    J --&gt;|GitHub Actions| K[\"Project Board&lt;br/&gt;Status \u2192 Done\"]\n    K --&gt; L[\"Deployed to preprod\"]\n</code></pre>"},{"location":"#project-tracking","title":"\ud83d\udcca Project Tracking","text":"<p>All work is tracked in GitHub Projects v2 with three main views:</p>"},{"location":"#backlog","title":"Backlog","text":"<p>All future issues, sortable by priority and effort</p>"},{"location":"#priority-board","title":"Priority Board","text":"<p>Current work in Kanban format: - Backlog: Not started - In Progress: Being worked on - In QA: Testing/Review - Done: Completed</p>"},{"location":"#team-items","title":"Team Items","text":"<p>Filter by assignee and sprint for personal tracking</p>"},{"location":"#security","title":"\ud83d\udd10 Security","text":""},{"location":"#permissions-model","title":"Permissions Model","text":"<ul> <li>Branch Creator: Write access (create branches)</li> <li>Code Reviewer: Read access (no modifications)</li> <li>Test Feedback: Read access (comment only)</li> <li>Human maintainers: Full permissions</li> </ul>"},{"location":"#api-keys","title":"API Keys","text":"<p>All sensitive credentials stored in GitHub Secrets (never in git): <pre><code>GH_TOKEN, CLAUDE_API_KEY, OPENAI_API_KEY, GEMINI_API_KEY\n</code></pre></p>"},{"location":"#use-cases","title":"\ud83c\udf93 Use Cases","text":""},{"location":"#perfect-for","title":"\u2705 Perfect For","text":"<ul> <li>Distributed teams with async workflows</li> <li>Projects with many contributors</li> <li>Continuous learning environments</li> <li>DevOps-focused teams</li> <li>Open-source projects</li> </ul>"},{"location":"#consider-alternatives-for","title":"\u26a0\ufe0f Consider Alternatives For","text":"<ul> <li>Real-time synchronous work</li> <li>Projects requiring manual QA</li> <li>Systems without GitHub</li> </ul>"},{"location":"#contributing","title":"\ud83e\udd1d Contributing","text":"<p>See CONTRIBUTING.md for guidelines on how to contribute to this template.</p>"},{"location":"#support","title":"\ud83d\udcde Support","text":"<ul> <li>\ud83d\udcd6 Documentation: See Getting Started</li> <li>\ud83d\udcac Discussions: GitHub Discussions tab</li> <li>\ud83d\udc1b Issues: Use the provided issue templates</li> <li>\ud83d\udce7 Email: your-email@example.com</li> </ul>"},{"location":"#license","title":"\ud83d\udcc4 License","text":"<p>MIT License - See LICENSE file for details.</p> <p>Ready to get started? \u2192 Installation Guide</p> <p>Want to learn more? \u2192 Architecture Overview</p> <p>Have questions? \u2192 FAQ</p>"},{"location":"faq/","title":"Frequently Asked Questions (FAQ)","text":""},{"location":"faq/#setup-installation","title":"Setup &amp; Installation","text":""},{"location":"faq/#q-do-i-need-to-pay-for-the-api-keys","title":"Q: Do I need to pay for the API keys?","text":"<p>A: - Claude API: Anthropic uses a pay-as-you-go model. Free credits available for new accounts. - OpenAI: Also pay-as-you-go, but usually more expensive than Claude for code review. - Gemini: Free tier available, pay-as-you-go otherwise.</p> <p>We recommend Claude for best code review quality and reasonable pricing.</p>"},{"location":"faq/#q-can-i-use-this-without-llm-apis","title":"Q: Can I use this without LLM APIs?","text":"<p>A: Yes! The template will still work: - \u2705 Branch Creator: Works without API keys - \u2705 CI Tests: Works without API keys - \u26a0\ufe0f Code Review: Falls back to basic lint if no API key is set - \u2705 Project Updates: Works without API keys</p>"},{"location":"faq/#q-what-python-versions-are-supported","title":"Q: What Python versions are supported?","text":"<p>A: 3.11+ is the default. You can modify <code>.github/workflows/ci-tests.yml</code> to test against: <pre><code>python-version: [\"3.9\", \"3.10\", \"3.11\", \"3.12\"]\n</code></pre></p>"},{"location":"faq/#workflows-automation","title":"Workflows &amp; Automation","text":""},{"location":"faq/#q-why-isnt-my-branch-being-created","title":"Q: Why isn't my branch being created?","text":"<p>A: Check these: 1. \u2705 Did you add the <code>auto-branch</code> label? 2. \u2705 Is the Actions tab showing the workflow running? 3. \u2705 Check workflow logs for errors: Actions \u2192 create-branch.yml \u2192 Latest run</p>"},{"location":"faq/#q-can-i-use-a-different-branch-naming-convention","title":"Q: Can I use a different branch naming convention?","text":"<p>A: Yes! Edit <code>.github/workflows/create-branch.yml</code> and modify the <code>BRANCH_NAME</code> variable:</p> <pre><code># Current: feat/{number}-{slug}\nBRANCH_NAME=\"feat/${ISSUE_NUMBER}-${SLUGIFIED}\"\n\n# Custom example: bugfix/{number}-{slug}\nBRANCH_NAME=\"bugfix/${ISSUE_NUMBER}-${SLUGIFIED}\"\n</code></pre>"},{"location":"faq/#q-why-did-the-code-review-agent-not-comment","title":"Q: Why did the Code Review Agent not comment?","text":"<p>A: Reasons: 1. <code>CLAUDE_API_KEY</code> not set in secrets 2. API rate limit exceeded 3. PR diff too large (limit: 10000 lines) 4. Workflow failed (check Actions logs)</p> <p>Solution: Add the secret and test on a new PR.</p>"},{"location":"faq/#q-can-i-disable-certain-workflows","title":"Q: Can I disable certain workflows?","text":"<p>A: Yes! Workflows have conditions. For example, to disable code review: 1. Go to <code>.github/workflows/code-review-agent.yml</code> 2. Add a condition in the <code>jobs:</code> section: <pre><code>jobs:\n  code-review:\n    if: false  # Disable this workflow\n</code></pre></p> <p>Or rename the file to <code>.disabled</code> to skip it.</p>"},{"location":"faq/#project-board-tracking","title":"Project Board &amp; Tracking","text":""},{"location":"faq/#q-how-do-i-bulk-update-statuses","title":"Q: How do I bulk update statuses?","text":"<p>A: Currently, GitHub Projects v2 doesn't have bulk edit via UI. You can: 1. Use GraphQL API for bulk updates 2. Use GitHub CLI: <pre><code>gh issue list --label \"ready\" | xargs -I {} gh issue edit {} --project \"Project Board\"\n</code></pre></p>"},{"location":"faq/#q-can-i-automate-status-transitions","title":"Q: Can I automate status transitions?","text":"<p>A: Partially. Workflows can update statuses via GraphQL, but full automation requires: 1. Custom scripts in your repo 2. External tools (Zapier, Make, etc.) 3. Custom GitHub App</p> <p>We recommend keeping human review for major status changes.</p>"},{"location":"faq/#q-why-arent-my-issues-appearing-in-the-project","title":"Q: Why aren't my issues appearing in the project?","text":"<p>A: Issues auto-appear if: 1. \u2705 Project is linked to the repository 2. \u2705 Issue has the right filters (if any)</p> <p>To manually link an issue: 1. Open the issue 2. Go to Projects section on the right 3. Click Add to project \u2192 Select your project</p>"},{"location":"faq/#github-actions-cicd","title":"GitHub Actions &amp; CI/CD","text":""},{"location":"faq/#q-why-are-my-tests-timing-out","title":"Q: Why are my tests timing out?","text":"<p>A: GitHub Actions has limits: - Free tier: 6 hours per month per user (deprecated, now all public) - Jobs: 6 hours max per job - Workflows: 35-day retention</p> <p>Solutions: 1. Optimize test suite (reduce expensive tests) 2. Use caching for dependencies 3. Run tests in parallel</p>"},{"location":"faq/#q-can-i-trigger-workflows-manually","title":"Q: Can I trigger workflows manually?","text":"<p>A: Yes! Add <code>workflow_dispatch</code> to any workflow:</p> <pre><code>on:\n  pull_request:\n  workflow_dispatch:  # Allows manual trigger\n</code></pre> <p>Then go to Actions \u2192 Workflow name \u2192 Run workflow</p>"},{"location":"faq/#q-how-do-i-see-workflow-logs","title":"Q: How do I see workflow logs?","text":"<p>A: 1. Go to Actions tab 2. Click the workflow run 3. Click the failed job 4. Expand steps to see logs 5. Look for error messages</p>"},{"location":"faq/#q-can-i-run-workflows-locally","title":"Q: Can I run workflows locally?","text":"<p>A: Yes! Use act:</p> <pre><code># Install\nbrew install act\n\n# Run a workflow locally\nact push\n\n# Run specific job\nact -j build\n</code></pre>"},{"location":"faq/#llm-code-review","title":"LLM &amp; Code Review","text":""},{"location":"faq/#q-will-the-ai-leak-my-code","title":"Q: Will the AI leak my code?","text":"<p>A: No: - Claude: Anthropic doesn't use API calls for training (per their policy) - Code review only analyzes the diff, not full codebase - All processing is server-side and secure</p> <p>However, always review third-party APIs' privacy policies.</p>"},{"location":"faq/#q-can-i-customize-the-code-review-prompt","title":"Q: Can I customize the code review prompt?","text":"<p>A: Yes! In <code>.github/workflows/code-review-agent.yml</code>, find this section:</p> <pre><code>prompt = f\"\"\"Review this GitHub Pull Request code changes...\n</code></pre> <p>Modify it to add your custom instructions: <pre><code>prompt = f\"\"\"Review this GitHub PR for our project.\nFocus on: {your_priorities}\nIgnore: {your_exclusions}\n...\n</code></pre></p>"},{"location":"faq/#q-whats-the-typical-cost-per-code-review","title":"Q: What's the typical cost per code review?","text":"<p>A: Claude (Anthropic): - ~$0.01 - $0.05 per review (depending on code size) - Much cheaper than OpenAI for this use case</p> <p>Monitor spending: <pre><code># Check Anthropic usage\ngh api user\n</code></pre></p>"},{"location":"faq/#q-can-i-use-multiple-llm-providers","title":"Q: Can I use multiple LLM providers?","text":"<p>A: Not yet. The current implementation uses one provider. To support multiple: 1. Modify the code review script to choose provider 2. Use a config file or environment variable 3. Test each provider</p> <p>Feature request: Consider opening an issue for multi-provider support!</p>"},{"location":"faq/#git-development","title":"Git &amp; Development","text":""},{"location":"faq/#q-how-do-i-revert-a-merged-pr","title":"Q: How do I revert a merged PR?","text":"<p>A: <pre><code># Option 1: Revert the commit\ngit revert {commit-hash}\n\n# Option 2: Revert via GitHub UI\nGo to PR \u2192 Click \"Revert\" button (appears after merge)\n</code></pre></p>"},{"location":"faq/#q-can-i-rename-a-branch","title":"Q: Can I rename a branch?","text":"<p>A: <pre><code># Rename locally\ngit branch -m old-name new-name\n\n# Rename remote\ngit push origin new-name\ngit push origin --delete old-name\n</code></pre></p> <p>Then delete the old branch on GitHub.</p>"},{"location":"faq/#q-why-is-my-commit-not-linked-to-an-issue","title":"Q: Why is my commit not linked to an issue?","text":"<p>A: Use the correct format in your commit message: <pre><code>git commit -m \"feat: Add feature\n\nCloses #123\"  # Must say \"Closes #123\"\n</code></pre></p> <p>Or in PR description: <pre><code>Fixes #123\nResolves #456\nCloses #789\n</code></pre></p>"},{"location":"faq/#troubleshooting","title":"Troubleshooting","text":""},{"location":"faq/#q-i-broke-something-how-do-i-reset","title":"Q: I broke something. How do I reset?","text":"<p>A: <pre><code># Undo last commit (keep changes)\ngit reset --soft HEAD~1\n\n# Undo last commit (discard changes)\ngit reset --hard HEAD~1\n\n# Undo to specific commit\ngit reset --hard {commit-hash}\n</code></pre></p> <p>\u26a0\ufe0f Be careful with <code>--hard</code>!</p>"},{"location":"faq/#q-my-workflow-is-in-an-infinite-loop","title":"Q: My workflow is in an infinite loop!","text":"<p>A: 1. Go to Actions tab 2. Click the stuck workflow 3. Click Cancel workflow (top right) 4. Fix the issue in the workflow file 5. Commit and push</p> <p>Example infinite loop cause: <pre><code># \u274c This causes infinite loop\non:\n  push:\n    paths: [\".github/workflows/\"]\n\njobs:\n  update-workflow:\n    runs-on: ubuntu-latest\n    steps:\n      - run: git push  # Triggers workflow again!\n</code></pre></p>"},{"location":"faq/#q-how-do-i-debug-a-failing-workflow","title":"Q: How do I debug a failing workflow?","text":"<p>A: 1. Check Actions \u2192 Failed workflow \u2192 Logs 2. Look for red text or error messages 3. Common issues:    - Missing secrets: <code>Could not resolve secret</code>    - Missing dependencies: <code>ModuleNotFoundError</code>    - Wrong branch: Check <code>on: [branches]</code>    - Permission issues: Check <code>permissions:</code> section</p>"},{"location":"faq/#q-can-i-get-email-notifications","title":"Q: Can I get email notifications?","text":"<p>A: Yes: 1. Go to Settings \u2192 Notifications 2. Enable GitHub Actions notifications 3. Choose: Always, Failing only, or Never</p>"},{"location":"faq/#advanced-questions","title":"Advanced Questions","text":""},{"location":"faq/#q-how-do-i-customize-the-project-fields","title":"Q: How do I customize the project fields?","text":"<p>A: In your GitHub Project v2 settings: 1. Click Settings (gear icon) 2. Click Custom fields 3. Add/Remove/Rename fields 4. Update workflows to sync with new field names</p>"},{"location":"faq/#q-can-i-use-this-for-non-python-projects","title":"Q: Can I use this for non-Python projects?","text":"<p>A: Yes! Modify the workflows: - JavaScript: Change <code>setup-python</code> to <code>setup-node</code> - Go: Use <code>setup-go</code> - Rust: Use <code>dtolnay/rust-toolchain</code></p> <p>Update the CI commands accordingly.</p>"},{"location":"faq/#q-how-do-i-integrate-with-external-tools-slack-discord-jira","title":"Q: How do I integrate with external tools (Slack, Discord, Jira)?","text":"<p>A: Options: 1. Webhooks: Send POST requests from workflows 2. GitHub Apps: Develop custom integrations 3. Zapier/Make: Connect without code 4. GitHub API: Custom scripts</p> <p>Example: Slack notification <pre><code>- name: Notify Slack\n  uses: slackapi/slack-github-action@v1\n  with:\n    webhook-url: ${{ secrets.SLACK_WEBHOOK }}\n</code></pre></p>"},{"location":"faq/#still-have-questions","title":"Still Have Questions?","text":"<ul> <li>\ud83d\udcda Read the Architecture Guide</li> <li>\ud83d\udcd6 Check Troubleshooting Guide</li> <li>\ud83d\udcac Open a GitHub Discussion</li> <li>\ud83d\udc1b File an Issue</li> </ul> <p>Last Updated: 2025-01-28 Version: 1.0.0</p>"},{"location":"getting-started/installation/","title":"Installation Guide","text":""},{"location":"getting-started/installation/#system-requirements","title":"System Requirements","text":"<ul> <li>Git: 2.30+</li> <li>GitHub Account: With repository admin access</li> <li>GitHub CLI: <code>gh</code> 2.0+</li> <li>Python: 3.11+ (if using Python workflows)</li> </ul>"},{"location":"getting-started/installation/#step-1-clone-the-repository","title":"Step 1: Clone the Repository","text":"<pre><code># Clone this template\ngit clone https://github.com/your-org/project-llm-management.git\ncd project-llm-management\n\n# Or fork and clone your fork\ngit clone https://github.com/YOUR_USERNAME/project-llm-management.git\n</code></pre>"},{"location":"getting-started/installation/#step-2-install-dependencies-optional","title":"Step 2: Install Dependencies (Optional)","text":"<p>If you want to run workflows locally for testing:</p> <pre><code># Python dependencies\npip install -r requirements.txt\n\n# Development tools (for local testing)\npip install pytest black pylint mypy mkdocs mkdocs-material\n</code></pre>"},{"location":"getting-started/installation/#step-3-configure-github-secrets","title":"Step 3: Configure GitHub Secrets","text":"<p>Navigate to your repository settings:</p> <p>Settings \u2192 Secrets and variables \u2192 Actions</p> <p>Add the following secrets:</p>"},{"location":"getting-started/installation/#required-secrets","title":"Required Secrets","text":""},{"location":"getting-started/installation/#github_token","title":"<code>GITHUB_TOKEN</code>","text":"<p>GitHub automatically provides this, but you can also create a Personal Access Token:</p> <pre><code>gh auth login\n# Select: GitHub.com\n# Select: HTTPS\n# Authenticate with browser\n</code></pre>"},{"location":"getting-started/installation/#claude_api_key-for-code-review","title":"<code>CLAUDE_API_KEY</code> (for Code Review)","text":"<ol> <li>Get your API key from console.anthropic.com</li> <li>Add it to your repo secrets:</li> </ol> <pre><code>gh secret set CLAUDE_API_KEY --body \"sk-ant-...\"\n</code></pre>"},{"location":"getting-started/installation/#optional-secrets","title":"Optional Secrets","text":""},{"location":"getting-started/installation/#openai_api_key-alternative-to-claude","title":"<code>OPENAI_API_KEY</code> (Alternative to Claude)","text":"<pre><code>gh secret set OPENAI_API_KEY --body \"sk-...\"\n</code></pre>"},{"location":"getting-started/installation/#gemini_api_key-alternative-to-claude","title":"<code>GEMINI_API_KEY</code> (Alternative to Claude)","text":"<pre><code>gh secret set GEMINI_API_KEY --body \"AIza...\"\n</code></pre>"},{"location":"getting-started/installation/#step-4-enable-github-projects-v2","title":"Step 4: Enable GitHub Projects v2","text":"<ol> <li>Go to your repository</li> <li>Click the Projects tab</li> <li>Click New project</li> <li>Select Table or Board view</li> <li>Name it: <code>Project Board</code></li> <li>Create the project</li> </ol>"},{"location":"getting-started/installation/#step-5-configure-project-fields","title":"Step 5: Configure Project Fields","text":""},{"location":"getting-started/installation/#custom-fields-to-create","title":"Custom Fields to Create","text":"<p>In the project settings, add these fields:</p> Field Name Type Values Priority Single select Low, Medium, High Effort Single select 1, 2, 3, 5, 8 Status Single select Backlog, In Progress, In QA, Done Owner People Auto (from assignee) Sprint Text v1.0, v2.0, etc. Environment Single select dev, preprod, prod"},{"location":"getting-started/installation/#create-views","title":"Create Views","text":""},{"location":"getting-started/installation/#1-backlog-table","title":"1. Backlog (Table)","text":"<ul> <li>Columns: Title, Priority, Effort, Owner, Status</li> <li>Filter: Status != \"Done\"</li> <li>Sort: Created date (oldest first)</li> </ul>"},{"location":"getting-started/installation/#2-priority-board-kanban","title":"2. Priority Board (Kanban)","text":"<ul> <li>Group by: Status</li> <li>Filter: Priority = High OR Medium</li> <li>Sort: Priority (highest first)</li> </ul>"},{"location":"getting-started/installation/#3-team-items-table","title":"3. Team Items (Table)","text":"<ul> <li>Columns: Title, Owner, Sprint, Status, Due Date</li> <li>Filter: Owner = me (for personal view)</li> </ul>"},{"location":"getting-started/installation/#step-6-configure-workflows","title":"Step 6: Configure Workflows","text":"<p>Most workflows are pre-configured, but verify they're enabled:</p> <p>Settings \u2192 Actions \u2192 General</p> <p>Ensure: - \u2705 Actions workflows are enabled - \u2705 Read/write permissions for Actions</p>"},{"location":"getting-started/installation/#step-7-test-the-setup","title":"Step 7: Test the Setup","text":""},{"location":"getting-started/installation/#create-a-test-issue","title":"Create a test issue","text":"<pre><code>gh issue create \\\n  --title \"Test: Setup verification\" \\\n  --body \"Testing the workflow setup\" \\\n  --label \"auto-branch\"\n</code></pre> <p>This should automatically: 1. Create a branch: <code>feat/1-test-setup-verification</code> 2. Post a comment with checkout instructions 3. Trigger the CI workflow</p>"},{"location":"getting-started/installation/#verify-workflows-ran","title":"Verify workflows ran","text":"<pre><code>gh run list --workflow ci-tests.yml\ngh run list --workflow create-branch.yml\n</code></pre>"},{"location":"getting-started/installation/#step-8-configure-mkdocs-documentation","title":"Step 8: Configure MkDocs (Documentation)","text":"<pre><code># Install MkDocs\npip install mkdocs mkdocs-material\n\n# Build docs locally\nmkdocs build\n\n# Serve locally\nmkdocs serve\n# Visit http://localhost:8000\n</code></pre>"},{"location":"getting-started/installation/#deploy-to-github-pages","title":"Deploy to GitHub Pages","text":"<p>The workflow <code>.github/workflows/deploy-docs.yml</code> automatically deploys when you push to <code>docs/</code>:</p> <ol> <li>Go to Settings \u2192 Pages</li> <li>Set source to Deploy from a branch</li> <li>Select gh-pages branch</li> <li>Save</li> </ol> <p>Your docs will be available at: <code>https://your-username.github.io/project-llm-management</code></p>"},{"location":"getting-started/installation/#step-9-create-development-environment","title":"Step 9: Create Development Environment","text":""},{"location":"getting-started/installation/#python-virtual-environment","title":"Python Virtual Environment","text":"<pre><code>python -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\npip install -r requirements.txt\n</code></pre>"},{"location":"getting-started/installation/#install-pre-commit-hooks-optional","title":"Install Pre-commit Hooks (Optional)","text":"<pre><code>pip install pre-commit\npre-commit install\n</code></pre>"},{"location":"getting-started/installation/#step-10-verify-installation","title":"Step 10: Verify Installation","text":"<p>Run this checklist:</p> <ul> <li>[ ] Repository cloned/forked locally</li> <li>[ ] GitHub secrets configured</li> <li>[ ] GitHub Projects v2 created</li> <li>[ ] Workflows enabled</li> <li>[ ] Test issue created and branch auto-created</li> <li>[ ] MkDocs documentation built</li> <li>[ ] Local development environment set up</li> </ul>"},{"location":"getting-started/installation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/installation/#issue-workflows-not-running","title":"Issue: Workflows not running","text":"<p>Solution: Check Settings \u2192 Actions \u2192 General \u2192 ensure workflows are enabled</p>"},{"location":"getting-started/installation/#issue-code-review-agent-not-working","title":"Issue: Code Review Agent not working","text":"<p>Solution: Verify <code>CLAUDE_API_KEY</code> is set correctly (no extra spaces)</p>"},{"location":"getting-started/installation/#issue-branch-not-created","title":"Issue: Branch not created","text":"<p>Solution: Ensure <code>auto-branch</code> label is added to the issue</p>"},{"location":"getting-started/installation/#issue-python-tests-fail","title":"Issue: Python tests fail","text":"<p>Solution: Install all dev dependencies: <code>pip install -r requirements.txt</code></p>"},{"location":"getting-started/installation/#next-steps","title":"Next Steps","text":"<ol> <li>\u2705 Quick Start Guide - Run your first workflow</li> <li>\ud83d\udcda Architecture Overview - Understand the system</li> <li>\ud83d\udcdd Contributing Guide - Start contributing</li> </ol> <p>Need help? Check the FAQ or Troubleshooting Guide</p>"},{"location":"getting-started/quickstart/","title":"Quick Start Guide","text":"<p>Get your first automated workflow running in 5 minutes!</p>"},{"location":"getting-started/quickstart/#prerequisites","title":"Prerequisites","text":"<ul> <li>Repository is installed</li> <li>GitHub secrets configured</li> <li>GitHub Projects v2 enabled</li> </ul>"},{"location":"getting-started/quickstart/#create-your-first-issue","title":"\ud83c\udfaf Create Your First Issue","text":""},{"location":"getting-started/quickstart/#step-1-open-github-issues","title":"Step 1: Open GitHub Issues","text":"<p>Navigate to your repository and click the Issues tab.</p>"},{"location":"getting-started/quickstart/#step-2-create-new-issue","title":"Step 2: Create New Issue","text":"<p>Click New issue \u2192 Select Feature Request</p>"},{"location":"getting-started/quickstart/#step-3-fill-the-form","title":"Step 3: Fill the Form","text":"<pre><code>Title: Add user profile page\n\nDescription:\n- Display user information\n- Show user statistics\n- Allow profile editing\n\nMotivation: Users want to see and manage their profile data\n\nAcceptance Criteria:\n- [ ] Profile page displays user info\n- [ ] Statistics are shown\n- [ ] Edit functionality works\n\nPriority: Medium\nEffort: 5\n</code></pre>"},{"location":"getting-started/quickstart/#step-4-submit-issue","title":"Step 4: Submit Issue","text":"<p>Click Submit new issue</p>"},{"location":"getting-started/quickstart/#trigger-the-branch-creator","title":"\ud83e\udd16 Trigger the Branch Creator","text":""},{"location":"getting-started/quickstart/#step-1-go-to-issue-details","title":"Step 1: Go to Issue Details","text":"<p>Click on the issue you just created.</p>"},{"location":"getting-started/quickstart/#step-2-add-label","title":"Step 2: Add Label","text":"<p>Click Labels \u2192 Select <code>auto-branch</code></p>"},{"location":"getting-started/quickstart/#step-3-watch-the-magic","title":"Step 3: Watch the Magic \u2728","text":"<p>The Branch Creator workflow will: 1. \u23f3 Run (check Actions tab) 2. \ud83d\udcdd Create a comment with your branch name 3. \ud83c\udf3f Push the new branch to GitHub</p> <p>Comment example: <pre><code>\u2705 Branch auto-created: `feat/123-add-user-profile-page`\n\nNext steps:\n1. git checkout feat/123-add-user-profile-page\n2. Make your changes\n3. Push and create a Pull Request\n</code></pre></p>"},{"location":"getting-started/quickstart/#develop-locally","title":"\ud83d\udcbb Develop Locally","text":""},{"location":"getting-started/quickstart/#step-1-check-out-the-branch","title":"Step 1: Check Out the Branch","text":"<pre><code>git pull origin\ngit checkout feat/123-add-user-profile-page\n</code></pre>"},{"location":"getting-started/quickstart/#step-2-make-your-changes","title":"Step 2: Make Your Changes","text":"<pre><code># Edit files\nnano src/app.py\n\n# Create a simple example file\ncat &gt; src/profile.py &lt;&lt; 'EOF'\ndef get_user_profile(user_id):\n    \"\"\"Get user profile by ID.\"\"\"\n    return {\"id\": user_id, \"name\": \"John Doe\"}\n\ndef update_profile(user_id, data):\n    \"\"\"Update user profile.\"\"\"\n    # Implementation\n    pass\nEOF\n</code></pre>"},{"location":"getting-started/quickstart/#step-3-run-tests-locally-optional","title":"Step 3: Run Tests Locally (Optional)","text":"<pre><code>pytest tests/\nblack src/\npylint src/\nmypy src/\n</code></pre>"},{"location":"getting-started/quickstart/#step-4-commit-and-push","title":"Step 4: Commit and Push","text":"<pre><code>git add .\ngit commit -m \"feat: Add user profile page\n\n- Implement profile display\n- Add profile editing functionality\n- Update documentation\"\n\ngit push origin feat/123-add-user-profile-page\n</code></pre>"},{"location":"getting-started/quickstart/#create-a-pull-request","title":"\ud83d\udccb Create a Pull Request","text":""},{"location":"getting-started/quickstart/#step-1-open-pr-on-github","title":"Step 1: Open PR on GitHub","text":"<p>Navigate to your repository: - You'll see a Compare &amp; pull request button - Click it, or go to Pull requests \u2192 New pull request</p>"},{"location":"getting-started/quickstart/#step-2-select-branches","title":"Step 2: Select Branches","text":"<ul> <li>Base: <code>develop</code> (or your main branch)</li> <li>Compare: <code>feat/123-add-user-profile-page</code></li> </ul>"},{"location":"getting-started/quickstart/#step-3-fill-pr-description","title":"Step 3: Fill PR Description","text":"<p>Use the template provided:</p> <pre><code>## Description\nAdded user profile page with display and edit functionality.\n\n## Issue\nCloses #123\n\n## Type of change\n- [ ] Feature\n\n## Checklist\n- [x] Tests added\n- [x] Documentation updated\n- [x] Lint passed\n\n## Screenshots\n[Add screenshot if applicable]\n</code></pre>"},{"location":"getting-started/quickstart/#step-4-create-pull-request","title":"Step 4: Create Pull Request","text":"<p>Click Create pull request</p>"},{"location":"getting-started/quickstart/#automated-workflows-execute","title":"\ud83e\udd16 Automated Workflows Execute","text":""},{"location":"getting-started/quickstart/#code-review-agent","title":"Code Review Agent","text":"<p>What happens: - Claude AI analyzes your code - Posts feedback comment on PR</p> <p>Example comment: <pre><code>## \ud83e\udd16 Code Review by Claude AI\n\n### \u2705 Strengths\n- Good error handling\n- Clear function names\n\n### \u26a0\ufe0f Suggestions\n- Add type hints to functions\n- Extract magic number 100 to constant\n\n### \ud83d\udd34 Critical Issues\nNone found!\n</code></pre></p>"},{"location":"getting-started/quickstart/#ci-tests","title":"CI Tests","text":"<p>What happens: - Tests run: <code>pytest</code> - Lint check: <code>black</code>, <code>pylint</code>, <code>mypy</code> - Build test - Coverage report</p> <p>Example result: <pre><code>## \u2705 Tests Passed\n\n- Tests: 127/127 \u2705\n- Coverage: 85%\n- Lint: OK\n</code></pre></p>"},{"location":"getting-started/quickstart/#code-review-merge","title":"\u2705 Code Review &amp; Merge","text":""},{"location":"getting-started/quickstart/#step-1-address-feedback","title":"Step 1: Address Feedback","text":"<p>If Claude suggested improvements: <pre><code># Make changes\nnano src/profile.py\n\n# Commit\ngit commit -am \"refactor: Add type hints and improve error handling\"\ngit push\n</code></pre></p> <p>Tests will re-run automatically!</p>"},{"location":"getting-started/quickstart/#step-2-request-review","title":"Step 2: Request Review","text":"<p>Ask a team member to review: - Click Request a reviewer on PR - Mention team members: <code>@username</code></p>"},{"location":"getting-started/quickstart/#step-3-get-approval","title":"Step 3: Get Approval","text":"<p>Once approved and tests pass:</p> <p>Your team reviews and approves \u2192 \u2705</p>"},{"location":"getting-started/quickstart/#step-4-merge","title":"Step 4: Merge","text":"<p>Click Merge pull request</p> <p>Options: - Create a merge commit (recommended) - Squash and merge (for clean history) - Rebase and merge (for linear history)</p> <p>Then Confirm merge</p>"},{"location":"getting-started/quickstart/#project-board-updates","title":"\ud83d\udcca Project Board Updates","text":""},{"location":"getting-started/quickstart/#watch-your-issue-progress","title":"Watch Your Issue Progress","text":"<ol> <li>Navigate to Projects tab</li> <li>See your issue move through statuses:</li> <li>Backlog \u2192 (when created)</li> <li>In Progress \u2192 (when PR opened)</li> <li>In QA \u2192 (when tests run)</li> <li>Done \u2192 (when PR merged)</li> </ol>"},{"location":"getting-started/quickstart/#check-metrics","title":"Check Metrics","text":"<p>In the Priority Board view: - Priority: Medium \u2713 - Effort: 5 \u2713 - Owner: You \u2713 - Status: Done \u2713</p>"},{"location":"getting-started/quickstart/#success","title":"\ud83c\udf89 Success!","text":"<p>You just completed the full workflow:</p> <pre><code>Issue Created\n    \u2193\nBranch Auto-Created\n    \u2193\nCoded Locally\n    \u2193\nPR Submitted\n    \u2193\nCode Review (AI)\n    \u2193\nTests Passed\n    \u2193\nPR Merged\n    \u2193\nProject Updated\n</code></pre>"},{"location":"getting-started/quickstart/#whats-next","title":"\ud83d\udcda What's Next?","text":"<ul> <li>Architecture Guide - Learn how it works</li> <li>Using Agents - Advanced agent configuration</li> <li>Contributing - Start contributing to projects</li> <li>FAQ - Common questions and answers</li> </ul>"},{"location":"getting-started/quickstart/#tips","title":"\ud83d\udca1 Tips","text":""},{"location":"getting-started/quickstart/#naming-conventions","title":"Naming Conventions","text":"<ul> <li>Branch: <code>feat/{number}-{description}</code> (auto-created)</li> <li>Commits: <code>feat:</code>, <code>fix:</code>, <code>docs:</code>, <code>refactor:</code></li> <li>PRs: Reference issue: <code>Closes #123</code></li> </ul>"},{"location":"getting-started/quickstart/#best-practices","title":"Best Practices","text":"<ul> <li>Write clear issue descriptions</li> <li>Include acceptance criteria</li> <li>Link PRs to issues</li> <li>Keep commits focused and atomic</li> <li>Write meaningful commit messages</li> </ul>"},{"location":"getting-started/quickstart/#keyboard-shortcuts","title":"Keyboard Shortcuts","text":"<ul> <li><code>?</code> on GitHub \u2192 See keyboard shortcuts</li> <li><code>c</code> \u2192 Create issue/PR</li> <li><code>p</code> \u2192 Go to PRs</li> <li><code>g</code> \u2192 Go to issues</li> </ul> <p>Congratulations! You're ready to manage projects with LLM agents.</p> <p>For detailed guides, see the full documentation.</p>"}]}