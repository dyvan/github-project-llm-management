{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Project LLM Management","text":"<p>Welcome to the GitHub-based Project Management with LLM Agents template!</p> <p>This is a comprehensive, production-ready template for managing software projects using:</p> <ul> <li>\ud83c\udfd7\ufe0f GitHub Projects v2 for centralized tracking</li> <li>\ud83e\udd16 LLM Agents (Claude, ChatGPT, Gemini) for automation</li> <li>\ud83d\udd04 GitHub Actions for CI/CD and workflows</li> <li>\ud83d\udc65 Human oversight via a central Project Board</li> </ul>"},{"location":"#key-features","title":"\ud83c\udfaf Key Features","text":""},{"location":"#automated-workflows","title":"Automated Workflows","text":"<ul> <li>Branch Creator: Automatically creates feature branches when issues receive the <code>auto-branch</code> label</li> <li>Code Reviewer: AI-powered code reviews on pull requests</li> <li>Test Feedback: Automated testing, linting, and coverage reporting</li> </ul>"},{"location":"#project-management","title":"Project Management","text":"<ul> <li>Backlog View: All future work, sorted by priority</li> <li>Priority Board: Kanban-style tracking by status</li> <li>Team Items: Personalized view filtered by owner</li> </ul>"},{"location":"#integration","title":"Integration","text":"<ul> <li>Seamless GitHub Projects v2 integration</li> <li>Multiple LLM provider support (Anthropic Claude, OpenAI, Google Gemini)</li> <li>Full CI/CD pipeline with automatic status updates</li> </ul>"},{"location":"#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"#1-prerequisites","title":"1. Prerequisites","text":"<ul> <li>Git</li> <li>GitHub account with admin access</li> <li>GitHub CLI (<code>gh</code>)</li> <li>Python 3.11+ (if using Python workflows)</li> </ul>"},{"location":"#2-clonefork-this-template","title":"2. Clone/Fork this template","text":"<pre><code>git clone https://github.com/your-org/project-llm-management.git\ncd project-llm-management\n</code></pre>"},{"location":"#3-configure-github-secrets","title":"3. Configure GitHub Secrets","text":"<p>Go to Settings \u2192 Secrets and variables \u2192 Actions and add: - <code>CLAUDE_API_KEY</code> (for code review) - <code>GH_TOKEN</code> (GitHub token with repo access)</p>"},{"location":"#4-enable-github-projects-v2","title":"4. Enable GitHub Projects v2","text":"<ul> <li>Navigate to your repository's Projects tab</li> <li>Click New project and select Table or Board</li> <li>Workflows will sync project updates automatically</li> </ul>"},{"location":"#5-create-your-first-issue","title":"5. Create your first issue","text":"<ul> <li>Use one of the provided templates (Feature, Bug, Task)</li> <li>Add the <code>auto-branch</code> label</li> <li>A branch will be created automatically!</li> </ul>"},{"location":"#documentation-structure","title":"\ud83d\udcda Documentation Structure","text":"<ul> <li>Getting Started: Setup and first steps</li> <li>Architecture: System design and components</li> <li>Guides: How to use each feature</li> <li>Agents: LLM agent documentation</li> </ul>"},{"location":"#how-it-works","title":"\ud83e\udd16 How It Works","text":"<pre><code>graph TD\n    A[\"Create Issue&lt;br/&gt;+ auto-branch label\"] --&gt;|GitHub Actions| B[\"Branch Creator&lt;br/&gt;Creates feat/123-title\"]\n    B --&gt; C[\"Develop Locally\"]\n    C --&gt; D[\"Push &amp; Create PR\"]\n    D --&gt;|GitHub Actions| E[\"Code Reviewer&lt;br/&gt;Claude analyzes code\"]\n    D --&gt;|GitHub Actions| F[\"CI Tests&lt;br/&gt;Run tests &amp; lint\"]\n    E --&gt; G[\"Post Comments\"]\n    F --&gt; H[\"Report Results\"]\n    G --&gt; I[\"Developer Reviews&lt;br/&gt;&amp; Fixes\"]\n    H --&gt; I\n    I --&gt;|Ready| J[\"Merge to develop\"]\n    J --&gt;|GitHub Actions| K[\"Project Board&lt;br/&gt;Status \u2192 Done\"]\n    K --&gt; L[\"Deployed to preprod\"]\n</code></pre>"},{"location":"#project-tracking","title":"\ud83d\udcca Project Tracking","text":"<p>All work is tracked in GitHub Projects v2 with three main views:</p>"},{"location":"#backlog","title":"Backlog","text":"<p>All future issues, sortable by priority and effort</p>"},{"location":"#priority-board","title":"Priority Board","text":"<p>Current work in Kanban format: - Backlog: Not started - In Progress: Being worked on - In QA: Testing/Review - Done: Completed</p>"},{"location":"#team-items","title":"Team Items","text":"<p>Filter by assignee and sprint for personal tracking</p>"},{"location":"#security","title":"\ud83d\udd10 Security","text":""},{"location":"#permissions-model","title":"Permissions Model","text":"<ul> <li>Branch Creator: Write access (create branches)</li> <li>Code Reviewer: Read access (no modifications)</li> <li>Test Feedback: Read access (comment only)</li> <li>Human maintainers: Full permissions</li> </ul>"},{"location":"#api-keys","title":"API Keys","text":"<p>All sensitive credentials stored in GitHub Secrets (never in git): <pre><code>GH_TOKEN, CLAUDE_API_KEY, OPENAI_API_KEY, GEMINI_API_KEY\n</code></pre></p>"},{"location":"#use-cases","title":"\ud83c\udf93 Use Cases","text":""},{"location":"#perfect-for","title":"\u2705 Perfect For","text":"<ul> <li>Distributed teams with async workflows</li> <li>Projects with many contributors</li> <li>Continuous learning environments</li> <li>DevOps-focused teams</li> <li>Open-source projects</li> </ul>"},{"location":"#consider-alternatives-for","title":"\u26a0\ufe0f Consider Alternatives For","text":"<ul> <li>Real-time synchronous work</li> <li>Projects requiring manual QA</li> <li>Systems without GitHub</li> </ul>"},{"location":"#contributing","title":"\ud83e\udd1d Contributing","text":"<p>See CONTRIBUTING.md for guidelines on how to contribute to this template.</p>"},{"location":"#support","title":"\ud83d\udcde Support","text":"<ul> <li>\ud83d\udcd6 Documentation: See Getting Started</li> <li>\ud83d\udcac Discussions: GitHub Discussions tab</li> <li>\ud83d\udc1b Issues: Use the provided issue templates</li> <li>\ud83d\udce7 Email: your-email@example.com</li> </ul>"},{"location":"#license","title":"\ud83d\udcc4 License","text":"<p>MIT License - See LICENSE file for details.</p> <p>Ready to get started? \u2192 Installation Guide</p> <p>Want to learn more? \u2192 Architecture Overview</p> <p>Have questions? \u2192 FAQ</p>"},{"location":"faq/","title":"Frequently Asked Questions (FAQ)","text":""},{"location":"faq/#setup-installation","title":"Setup &amp; Installation","text":""},{"location":"faq/#q-do-i-need-to-pay-for-the-api-keys","title":"Q: Do I need to pay for the API keys?","text":"<p>A: - Claude API: Anthropic uses a pay-as-you-go model. Free credits available for new accounts. - OpenAI: Also pay-as-you-go, but usually more expensive than Claude for code review. - Gemini: Free tier available, pay-as-you-go otherwise.</p> <p>We recommend Claude for best code review quality and reasonable pricing.</p>"},{"location":"faq/#q-can-i-use-this-without-llm-apis","title":"Q: Can I use this without LLM APIs?","text":"<p>A: Yes! The template will still work: - \u2705 Branch Creator: Works without API keys - \u2705 CI Tests: Works without API keys - \u26a0\ufe0f Code Review: Falls back to basic lint if no API key is set - \u2705 Project Updates: Works without API keys</p>"},{"location":"faq/#q-what-python-versions-are-supported","title":"Q: What Python versions are supported?","text":"<p>A: 3.11+ is the default. You can modify <code>.github/workflows/ci-tests.yml</code> to test against: <pre><code>python-version: [\"3.9\", \"3.10\", \"3.11\", \"3.12\"]\n</code></pre></p>"},{"location":"faq/#workflows-automation","title":"Workflows &amp; Automation","text":""},{"location":"faq/#q-why-isnt-my-branch-being-created","title":"Q: Why isn't my branch being created?","text":"<p>A: Check these: 1. \u2705 Did you add the <code>auto-branch</code> label? 2. \u2705 Is the Actions tab showing the workflow running? 3. \u2705 Check workflow logs for errors: Actions \u2192 create-branch.yml \u2192 Latest run</p>"},{"location":"faq/#q-can-i-use-a-different-branch-naming-convention","title":"Q: Can I use a different branch naming convention?","text":"<p>A: Yes! Edit <code>.github/workflows/create-branch.yml</code> and modify the <code>BRANCH_NAME</code> variable:</p> <pre><code># Current: feat/{number}-{slug}\nBRANCH_NAME=\"feat/${ISSUE_NUMBER}-${SLUGIFIED}\"\n\n# Custom example: bugfix/{number}-{slug}\nBRANCH_NAME=\"bugfix/${ISSUE_NUMBER}-${SLUGIFIED}\"\n</code></pre>"},{"location":"faq/#q-why-did-the-code-review-agent-not-comment","title":"Q: Why did the Code Review Agent not comment?","text":"<p>A: Reasons: 1. <code>CLAUDE_API_KEY</code> not set in secrets 2. API rate limit exceeded 3. PR diff too large (limit: 10000 lines) 4. Workflow failed (check Actions logs)</p> <p>Solution: Add the secret and test on a new PR.</p>"},{"location":"faq/#q-can-i-disable-certain-workflows","title":"Q: Can I disable certain workflows?","text":"<p>A: Yes! Workflows have conditions. For example, to disable code review: 1. Go to <code>.github/workflows/code-review-agent.yml</code> 2. Add a condition in the <code>jobs:</code> section: <pre><code>jobs:\n  code-review:\n    if: false  # Disable this workflow\n</code></pre></p> <p>Or rename the file to <code>.disabled</code> to skip it.</p>"},{"location":"faq/#project-board-tracking","title":"Project Board &amp; Tracking","text":""},{"location":"faq/#q-how-do-i-bulk-update-statuses","title":"Q: How do I bulk update statuses?","text":"<p>A: Currently, GitHub Projects v2 doesn't have bulk edit via UI. You can: 1. Use GraphQL API for bulk updates 2. Use GitHub CLI: <pre><code>gh issue list --label \"ready\" | xargs -I {} gh issue edit {} --project \"Project Board\"\n</code></pre></p>"},{"location":"faq/#q-can-i-automate-status-transitions","title":"Q: Can I automate status transitions?","text":"<p>A: Partially. Workflows can update statuses via GraphQL, but full automation requires: 1. Custom scripts in your repo 2. External tools (Zapier, Make, etc.) 3. Custom GitHub App</p> <p>We recommend keeping human review for major status changes.</p>"},{"location":"faq/#q-why-arent-my-issues-appearing-in-the-project","title":"Q: Why aren't my issues appearing in the project?","text":"<p>A: Issues auto-appear if: 1. \u2705 Project is linked to the repository 2. \u2705 Issue has the right filters (if any)</p> <p>To manually link an issue: 1. Open the issue 2. Go to Projects section on the right 3. Click Add to project \u2192 Select your project</p>"},{"location":"faq/#github-actions-cicd","title":"GitHub Actions &amp; CI/CD","text":""},{"location":"faq/#q-why-are-my-tests-timing-out","title":"Q: Why are my tests timing out?","text":"<p>A: GitHub Actions has limits: - Free tier: 6 hours per month per user (deprecated, now all public) - Jobs: 6 hours max per job - Workflows: 35-day retention</p> <p>Solutions: 1. Optimize test suite (reduce expensive tests) 2. Use caching for dependencies 3. Run tests in parallel</p>"},{"location":"faq/#q-can-i-trigger-workflows-manually","title":"Q: Can I trigger workflows manually?","text":"<p>A: Yes! Add <code>workflow_dispatch</code> to any workflow:</p> <pre><code>on:\n  pull_request:\n  workflow_dispatch:  # Allows manual trigger\n</code></pre> <p>Then go to Actions \u2192 Workflow name \u2192 Run workflow</p>"},{"location":"faq/#q-how-do-i-see-workflow-logs","title":"Q: How do I see workflow logs?","text":"<p>A: 1. Go to Actions tab 2. Click the workflow run 3. Click the failed job 4. Expand steps to see logs 5. Look for error messages</p>"},{"location":"faq/#q-can-i-run-workflows-locally","title":"Q: Can I run workflows locally?","text":"<p>A: Yes! Use act:</p> <pre><code># Install\nbrew install act\n\n# Run a workflow locally\nact push\n\n# Run specific job\nact -j build\n</code></pre>"},{"location":"faq/#llm-code-review","title":"LLM &amp; Code Review","text":""},{"location":"faq/#q-will-the-ai-leak-my-code","title":"Q: Will the AI leak my code?","text":"<p>A: No: - Claude: Anthropic doesn't use API calls for training (per their policy) - Code review only analyzes the diff, not full codebase - All processing is server-side and secure</p> <p>However, always review third-party APIs' privacy policies.</p>"},{"location":"faq/#q-can-i-customize-the-code-review-prompt","title":"Q: Can I customize the code review prompt?","text":"<p>A: Yes! In <code>.github/workflows/code-review-agent.yml</code>, find this section:</p> <pre><code>prompt = f\"\"\"Review this GitHub Pull Request code changes...\n</code></pre> <p>Modify it to add your custom instructions: <pre><code>prompt = f\"\"\"Review this GitHub PR for our project.\nFocus on: {your_priorities}\nIgnore: {your_exclusions}\n...\n</code></pre></p>"},{"location":"faq/#q-whats-the-typical-cost-per-code-review","title":"Q: What's the typical cost per code review?","text":"<p>A: Claude (Anthropic): - ~$0.01 - $0.05 per review (depending on code size) - Much cheaper than OpenAI for this use case</p> <p>Monitor spending: <pre><code># Check Anthropic usage\ngh api user\n</code></pre></p>"},{"location":"faq/#q-can-i-use-multiple-llm-providers","title":"Q: Can I use multiple LLM providers?","text":"<p>A: Not yet. The current implementation uses one provider. To support multiple: 1. Modify the code review script to choose provider 2. Use a config file or environment variable 3. Test each provider</p> <p>Feature request: Consider opening an issue for multi-provider support!</p>"},{"location":"faq/#git-development","title":"Git &amp; Development","text":""},{"location":"faq/#q-how-do-i-revert-a-merged-pr","title":"Q: How do I revert a merged PR?","text":"<p>A: <pre><code># Option 1: Revert the commit\ngit revert {commit-hash}\n\n# Option 2: Revert via GitHub UI\nGo to PR \u2192 Click \"Revert\" button (appears after merge)\n</code></pre></p>"},{"location":"faq/#q-can-i-rename-a-branch","title":"Q: Can I rename a branch?","text":"<p>A: <pre><code># Rename locally\ngit branch -m old-name new-name\n\n# Rename remote\ngit push origin new-name\ngit push origin --delete old-name\n</code></pre></p> <p>Then delete the old branch on GitHub.</p>"},{"location":"faq/#q-why-is-my-commit-not-linked-to-an-issue","title":"Q: Why is my commit not linked to an issue?","text":"<p>A: Use the correct format in your commit message: <pre><code>git commit -m \"feat: Add feature\n\nCloses #123\"  # Must say \"Closes #123\"\n</code></pre></p> <p>Or in PR description: <pre><code>Fixes #123\nResolves #456\nCloses #789\n</code></pre></p>"},{"location":"faq/#troubleshooting","title":"Troubleshooting","text":""},{"location":"faq/#q-i-broke-something-how-do-i-reset","title":"Q: I broke something. How do I reset?","text":"<p>A: <pre><code># Undo last commit (keep changes)\ngit reset --soft HEAD~1\n\n# Undo last commit (discard changes)\ngit reset --hard HEAD~1\n\n# Undo to specific commit\ngit reset --hard {commit-hash}\n</code></pre></p> <p>\u26a0\ufe0f Be careful with <code>--hard</code>!</p>"},{"location":"faq/#q-my-workflow-is-in-an-infinite-loop","title":"Q: My workflow is in an infinite loop!","text":"<p>A: 1. Go to Actions tab 2. Click the stuck workflow 3. Click Cancel workflow (top right) 4. Fix the issue in the workflow file 5. Commit and push</p> <p>Example infinite loop cause: <pre><code># \u274c This causes infinite loop\non:\n  push:\n    paths: [\".github/workflows/\"]\n\njobs:\n  update-workflow:\n    runs-on: ubuntu-latest\n    steps:\n      - run: git push  # Triggers workflow again!\n</code></pre></p>"},{"location":"faq/#q-how-do-i-debug-a-failing-workflow","title":"Q: How do I debug a failing workflow?","text":"<p>A: 1. Check Actions \u2192 Failed workflow \u2192 Logs 2. Look for red text or error messages 3. Common issues:    - Missing secrets: <code>Could not resolve secret</code>    - Missing dependencies: <code>ModuleNotFoundError</code>    - Wrong branch: Check <code>on: [branches]</code>    - Permission issues: Check <code>permissions:</code> section</p>"},{"location":"faq/#q-can-i-get-email-notifications","title":"Q: Can I get email notifications?","text":"<p>A: Yes: 1. Go to Settings \u2192 Notifications 2. Enable GitHub Actions notifications 3. Choose: Always, Failing only, or Never</p>"},{"location":"faq/#advanced-questions","title":"Advanced Questions","text":""},{"location":"faq/#q-how-do-i-customize-the-project-fields","title":"Q: How do I customize the project fields?","text":"<p>A: In your GitHub Project v2 settings: 1. Click Settings (gear icon) 2. Click Custom fields 3. Add/Remove/Rename fields 4. Update workflows to sync with new field names</p>"},{"location":"faq/#q-can-i-use-this-for-non-python-projects","title":"Q: Can I use this for non-Python projects?","text":"<p>A: Yes! Modify the workflows: - JavaScript: Change <code>setup-python</code> to <code>setup-node</code> - Go: Use <code>setup-go</code> - Rust: Use <code>dtolnay/rust-toolchain</code></p> <p>Update the CI commands accordingly.</p>"},{"location":"faq/#q-how-do-i-integrate-with-external-tools-slack-discord-jira","title":"Q: How do I integrate with external tools (Slack, Discord, Jira)?","text":"<p>A: Options: 1. Webhooks: Send POST requests from workflows 2. GitHub Apps: Develop custom integrations 3. Zapier/Make: Connect without code 4. GitHub API: Custom scripts</p> <p>Example: Slack notification <pre><code>- name: Notify Slack\n  uses: slackapi/slack-github-action@v1\n  with:\n    webhook-url: ${{ secrets.SLACK_WEBHOOK }}\n</code></pre></p>"},{"location":"faq/#still-have-questions","title":"Still Have Questions?","text":"<ul> <li>\ud83d\udcda Read the Architecture Guide</li> <li>\ud83d\udcd6 Check Troubleshooting Guide</li> <li>\ud83d\udcac Open a GitHub Discussion</li> <li>\ud83d\udc1b File an Issue</li> </ul> <p>Last Updated: 2025-01-28 Version: 1.0.0</p>"},{"location":"architecture/github-projects/","title":"GitHub Projects v2 Configuration","text":""},{"location":"architecture/github-projects/#overview","title":"\ud83d\udcca Overview","text":"<p>GitHub Projects v2 est votre dashboard central pour g\u00e9rer tous les travaux du projet avec visibilit\u00e9 compl\u00e8te et mises \u00e0 jour automatiques.</p>"},{"location":"architecture/github-projects/#setup-initial","title":"\ud83c\udfaf Setup Initial","text":""},{"location":"architecture/github-projects/#1-creer-le-project","title":"1. Cr\u00e9er le Project","text":"<ol> <li>Allez \u00e0 votre repository</li> <li>Cliquez l'onglet Projects</li> <li>Cliquez New project</li> <li>Choisissez :</li> <li>Nom : <code>Project Board</code></li> <li>Template : Table (or Kanban)</li> <li>Visibility : Public</li> </ol>"},{"location":"architecture/github-projects/#2-configurer-les-champs-personnalises","title":"2. Configurer les Champs Personnalis\u00e9s","text":"<p>Dans Settings \u2192 Custom fields :</p> Champ Type Options Requis Priority Single select Low, Medium, High Non Effort Single select 1, 2, 3, 5, 8 Non Status Single select Backlog, In Progress, In QA, Done Oui Owner People (auto) Non Sprint Text (custom) Non Environment Single select dev, preprod, prod Non"},{"location":"architecture/github-projects/#3-creer-les-vues","title":"3. Cr\u00e9er les Vues","text":""},{"location":"architecture/github-projects/#vue-1-backlog-table","title":"Vue 1: Backlog (Table)","text":"<p>Colonnes : - Title - Priority - Effort - Owner - Status - Sprint</p> <p>Filtres : - Status is not Done</p> <p>Tri : - Created date (oldest first)</p> <p>Utilisation : Planification, estimation, priorisation</p>"},{"location":"architecture/github-projects/#vue-2-priority-board-kanban","title":"Vue 2: Priority Board (Kanban)","text":"<p>Groupage : Status - Backlog : Non commenc\u00e9 - In Progress : En d\u00e9veloppement - In QA : Testing/Review - Done : Compl\u00e9t\u00e9</p> <p>Filtres : - Priority = High OR Medium</p> <p>Tri : Priority (highest first)</p> <p>Utilisation : Vue d'ex\u00e9cution, tracking en temps r\u00e9el</p>"},{"location":"architecture/github-projects/#vue-3-team-items-table","title":"Vue 3: Team Items (Table)","text":"<p>Colonnes : - Title - Owner - Sprint - Status - Due Date</p> <p>Filtres : - Owner = @me (for personal view)</p> <p>Tri : - Sprint, then Status</p> <p>Utilisation : Suivi personnel, planning de sprint</p>"},{"location":"architecture/github-projects/#workflow-integration","title":"\ud83d\udd04 Workflow Integration","text":""},{"location":"architecture/github-projects/#auto-updates","title":"Auto-Updates","text":"<p>Les workflows mettent \u00e0 jour le project automatiquement :</p> <pre><code># Dans .github/workflows/update-project.yml\n# D\u00e9clench\u00e9 apr\u00e8s chaque action\n</code></pre> <p>Actions : - Issue cr\u00e9\u00e9e \u2192 Ajout\u00e9e au Backlog - Label <code>auto-branch</code> ajout\u00e9 \u2192 Status reste Backlog - PR ouverte \u2192 Status \u2192 In QA - Tests passent \u2192 Status \u2192 Ready for Merge - PR merg\u00e9e \u2192 Status \u2192 Done</p>"},{"location":"architecture/github-projects/#manual-updates","title":"Manual Updates","text":"<p>Vous pouvez aussi manuellement : 1. Drag &amp; drop items entre statuts 2. \u00c9diter les champs 3. Ajouter des notes</p>"},{"location":"architecture/github-projects/#field-details","title":"\ud83d\udccb Field Details","text":""},{"location":"architecture/github-projects/#priority","title":"Priority","text":"<pre><code>Low     = Nice to have, no urgency\nMedium  = Important, should do\nHigh    = Critical, must do\n</code></pre>"},{"location":"architecture/github-projects/#effort-story-points","title":"Effort (Story Points)","text":"<pre><code>1 = Trivial (30 mins)\n2 = Small (2-4 hours)\n3 = Medium (1 day)\n5 = Large (2-3 days)\n8 = XL (1+ week)\n</code></pre>"},{"location":"architecture/github-projects/#status","title":"Status","text":"<pre><code>Backlog      = Not started, awaiting prioritization\nIn Progress  = Being actively worked on\nIn QA        = Testing, code review, validation\nDone         = Completed, merged, ready for use\n</code></pre>"},{"location":"architecture/github-projects/#owner","title":"Owner","text":"<p>Auto-populated from issue assignee. Can be manually set.</p>"},{"location":"architecture/github-projects/#sprint","title":"Sprint","text":"<p>Free-text field for sprint identification: <pre><code>v1.0 (initial release)\nv1.1 (patch release)\nSprint 1, Sprint 2, etc.\n</code></pre></p>"},{"location":"architecture/github-projects/#environment","title":"Environment","text":"<p>For tracking which environment feature is deployed: <pre><code>dev    = In development/testing\npreprod = Validated, ready for production\nprod   = Live in production\n</code></pre></p>"},{"location":"architecture/github-projects/#sample-views","title":"\ud83d\udcca Sample Views","text":""},{"location":"architecture/github-projects/#backlog-view","title":"Backlog View","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Title              \u2502 Priority \u2502 Effort \u2502 Status \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Add authentication \u2502 High     \u2502 5      \u2502 Backlog\u2502\n\u2502 User profiles      \u2502 Medium   \u2502 3      \u2502 Backlog\u2502\n\u2502 Dark mode          \u2502 Low      \u2502 2      \u2502 Backlog\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"architecture/github-projects/#priority-board-kanban","title":"Priority Board (Kanban)","text":"<pre><code>Backlog          In Progress       In QA         Done\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Add auth\u2502     \u2502Dark mode\u2502      \u2502 Profiles\u2502    \u2502 Setup   \u2502\n\u2502 (P:High)\u2502     \u2502 (P:Low) \u2502      \u2502(P:Medium)    \u2502 (P:High)\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n                                  Auth\n                                 (P:High)\n</code></pre>"},{"location":"architecture/github-projects/#filtering-sorting","title":"\ud83d\udd0d Filtering &amp; Sorting","text":""},{"location":"architecture/github-projects/#quick-filters","title":"Quick Filters","text":"<pre><code># Show only high priority\nfilter: priority = \"High\"\n\n# Show only my items\nfilter: owner = @me\n\n# Show items for sprint 1\nfilter: sprint = \"Sprint 1\"\n\n# Show in-progress items\nfilter: status = \"In Progress\"\n</code></pre>"},{"location":"architecture/github-projects/#sorting","title":"Sorting","text":"<ul> <li>By Title (alphabetical)</li> <li>By Priority (High \u2192 Medium \u2192 Low)</li> <li>By Status (custom order)</li> <li>By Date created/updated</li> <li>By Owner</li> </ul>"},{"location":"architecture/github-projects/#metrics-reports","title":"\ud83d\udcc8 Metrics &amp; Reports","text":""},{"location":"architecture/github-projects/#sprint-reports","title":"Sprint Reports","text":"<ol> <li>View sprint items</li> <li>Count completed vs in-progress</li> <li>Calculate velocity (points/sprint)</li> </ol> <p>Example: <pre><code>Sprint 1 (Jan 1-15)\n- Total points: 21\n- Completed: 13 points\n- Velocity: 13 points/2 weeks\n</code></pre></p>"},{"location":"architecture/github-projects/#release-planning","title":"Release Planning","text":"<pre><code>v1.0 Release\n\u251c\u2500 Setup &amp; CI/CD (5 points) - Done\n\u251c\u2500 Authentication (8 points) - In Progress\n\u251c\u2500 User Profiles (5 points) - Backlog\n\u2514\u2500 Dark Mode (2 points) - Backlog\n\nTotal: 20 points\nCompleted: 5 points (25%)\n</code></pre>"},{"location":"architecture/github-projects/#linking-issues-prs","title":"\ud83d\udd17 Linking Issues &amp; PRs","text":""},{"location":"architecture/github-projects/#auto-linking","title":"Auto-Linking","text":"<p>In PR description, use: <pre><code>Closes #123\nFixes #456\nResolves #789\n</code></pre></p> <p>This automatically: - Links the PR to the issue - Closes the issue when PR merges - Updates project status</p>"},{"location":"architecture/github-projects/#manual-linking","title":"Manual Linking","text":"<ol> <li>Open issue/PR</li> <li>Click Projects on right sidebar</li> <li>Select the project</li> <li>Item is added</li> </ol>"},{"location":"architecture/github-projects/#advanced-configuration","title":"\u2699\ufe0f Advanced Configuration","text":""},{"location":"architecture/github-projects/#automation-rules-future","title":"Automation Rules (Future)","text":"<p>GitHub is adding automation for: - Auto-move items based on triggers - Auto-assign based on labels - Auto-close based on time</p>"},{"location":"architecture/github-projects/#custom-views-via-api","title":"Custom Views via API","text":"<p>Using GraphQL, you can: - Fetch project data programmatically - Create custom dashboards - Export reports</p> <p>Example: <pre><code>query {\n  projectNext(first: 1) {\n    projectItems(first: 10) {\n      nodes {\n        title\n        fieldValues(first: 5) {\n          nodes {\n            field { name }\n            value\n          }\n        }\n      }\n    }\n  }\n}\n</code></pre></p>"},{"location":"architecture/github-projects/#best-practices","title":"\ud83c\udf93 Best Practices","text":""},{"location":"architecture/github-projects/#planning","title":"Planning","text":"<ul> <li>\u2705 Estimate all items before sprint</li> <li>\u2705 Set clear acceptance criteria</li> <li>\u2705 Link related issues</li> <li>\u274c Don't over-commit velocity</li> </ul>"},{"location":"architecture/github-projects/#execution","title":"Execution","text":"<ul> <li>\u2705 Move items to \"In Progress\" when starting</li> <li>\u2705 Update status as work progresses</li> <li>\u2705 Comment on blockers immediately</li> <li>\u274c Don't let items stuck in \"In Progress\"</li> </ul>"},{"location":"architecture/github-projects/#review-close","title":"Review &amp; Close","text":"<ul> <li>\u2705 Move to \"In QA\" for testing</li> <li>\u2705 Review before merging</li> <li>\u2705 Mark \"Done\" only after merge</li> <li>\u2705 Update metrics weekly</li> </ul>"},{"location":"architecture/github-projects/#permissions","title":"\ud83d\udd10 Permissions","text":"Role Can Edit Can View Owner \u2705 All \u2705 All Maintainer \u2705 Assigned items \u2705 All Developer \u2705 Assigned items \u2705 All Public \u274c No \u2705 If public"},{"location":"architecture/github-projects/#troubleshooting","title":"\ud83c\udd98 Troubleshooting","text":""},{"location":"architecture/github-projects/#issue-not-appearing-in-project","title":"Issue not appearing in project","text":"<ul> <li>Check if project is linked to repo</li> <li>Refresh the page</li> <li>Try adding manually via right sidebar</li> </ul>"},{"location":"architecture/github-projects/#status-not-updating-automatically","title":"Status not updating automatically","text":"<ul> <li>Check workflow logs in Actions tab</li> <li>Verify custom field names match workflows</li> <li>Test workflow manually</li> </ul>"},{"location":"architecture/github-projects/#cant-drag-items-in-kanban","title":"Can't drag items in Kanban","text":"<ul> <li>Check if you have edit permissions</li> <li>Try full refresh (Cmd+Shift+R)</li> <li>Check browser console for errors</li> </ul> <p>Next: Workflows Documentation</p>"},{"location":"architecture/overview/","title":"Architecture Overview","text":""},{"location":"architecture/overview/#system-design","title":"\ud83c\udfd7\ufe0f System Design","text":"<p>Le syst\u00e8me est compos\u00e9 de trois couches interconnect\u00e9es :</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                    HUMAN OVERSIGHT LAYER                     \u2502\n\u2502              GitHub Projects v2 - Central Dashboard           \u2502\n\u2502         (Backlog, Priority Board, Team Items Views)           \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                              \u25b2\n                              \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502           AUTOMATION LAYER (GitHub Actions)                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  Branch Creator  \u2502 Code Reviewer \u2502 Test Feedback \u2502 Update  \u2502\n\u2502  (on: labeled)   \u2502 (on: pr open) \u2502 (on: push)    \u2502 Project \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                              \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502              DEVELOPMENT LAYER                              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  Git Repository \u2502 Issues &amp; PRs \u2502 Branches \u2502 Commits         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"architecture/overview/#data-flow","title":"\ud83d\udcca Data Flow","text":""},{"location":"architecture/overview/#1-issue-creation","title":"1\ufe0f\u20e3 Issue Creation","text":"<pre><code>Developer creates issue\n       \u2193\nIssue gets auto-labeled\n       \u2193\nIssue appears in Project Backlog\n       \u2193\nDeveloper can set Priority/Effort\n</code></pre>"},{"location":"architecture/overview/#2-branch-auto-creation","title":"2\ufe0f\u20e3 Branch Auto-Creation","text":"<pre><code>\"auto-branch\" label added\n       \u2193\nGitHub Actions triggered\n       \u2193\nBranch Creator Agent runs\n       \u2193\nBranch created: feat/{number}-{title}\n       \u2193\nComment posted on issue\n       \u2193\nDeveloper can checkout branch\n</code></pre>"},{"location":"architecture/overview/#3-development-pr","title":"3\ufe0f\u20e3 Development &amp; PR","text":"<pre><code>Developer codes locally\n       \u2193\nPush to branch\n       \u2193\nCreate Pull Request\n       \u2193\nGitHub Actions triggered (multiple parallel)\n</code></pre>"},{"location":"architecture/overview/#4-pr-automation","title":"4\ufe0f\u20e3 PR Automation","text":"<pre><code>CI Tests Workflow              Code Review Workflow\n    \u2193                                \u2193\n1. Install deps               1. Get PR diff\n2. Lint (black, pylint)       2. Call Claude API\n3. Type check (mypy)          3. Generate review\n4. Run tests (pytest)         4. Post comment\n5. Build                      5. Update status\n6. Comment result\n    \u2193                                \u2193\n        \u2190 Merge decision \u2190\n</code></pre>"},{"location":"architecture/overview/#5-post-merge","title":"5\ufe0f\u20e3 Post-Merge","text":"<pre><code>PR merged\n     \u2193\nUpdate Project status \u2192 \"Done\"\n     \u2193\nIssue linked to PR auto-closes\n     \u2193\nProject Board reflects completion\n</code></pre>"},{"location":"architecture/overview/#agent-responsibilities","title":"\ud83d\udd04 Agent Responsibilities","text":""},{"location":"architecture/overview/#branch-creator","title":"Branch Creator","text":"<ul> <li>Input : Issue + <code>auto-branch</code> label</li> <li>Process : Validate \u2192 Format \u2192 Create \u2192 Comment</li> <li>Output : Branch created, comment posted</li> <li>Permissions : <code>contents: write</code>, <code>issues: write</code></li> </ul>"},{"location":"architecture/overview/#code-reviewer","title":"Code Reviewer","text":"<ul> <li>Input : PR opened/updated</li> <li>Process : Extract diff \u2192 Call Claude \u2192 Format \u2192 Post</li> <li>Output : Comment with feedback</li> <li>Permissions : <code>pull-requests: write</code>, <code>contents: read</code></li> <li>Note : Non-blocking, informational only</li> </ul>"},{"location":"architecture/overview/#test-feedback","title":"Test Feedback","text":"<ul> <li>Input : Push to branch or PR</li> <li>Process : Run tests \u2192 Collect results \u2192 Report \u2192 Update project</li> <li>Output : Comment + status update</li> <li>Permissions : <code>contents: read</code>, <code>pull-requests: write</code></li> </ul>"},{"location":"architecture/overview/#project-board-integration","title":"\ud83c\udfaf Project Board Integration","text":""},{"location":"architecture/overview/#fields-views","title":"Fields &amp; Views","text":"<p>Custom Fields : - Priority: Low/Medium/High - Effort: 1/2/3/5/8 (story points) - Status: Backlog/In Progress/In QA/Done - Owner: (auto from assignee) - Sprint: (text field) - Environment: dev/preprod/prod</p> <p>Views : 1. Backlog (Table) : All issues, sortable 2. Priority Board (Kanban) : Grouped by status 3. Team Items (Table) : Filtered by owner</p>"},{"location":"architecture/overview/#permission-model","title":"\ud83d\udd10 Permission Model","text":"Agent Scope Permissions Why Branch Creator Repository write Create branches Code Reviewer PR read/write Analyze code, comment Test Feedback Repository read/write Run tests, update status Human Maintainers All admin Final approval, merge"},{"location":"architecture/overview/#deployment-strategy","title":"\ud83d\ude80 Deployment Strategy","text":""},{"location":"architecture/overview/#current-development","title":"Current (Development)","text":"<pre><code>main/develop branch\n       \u2193\nGitHub Pages (docs)\n       \u2193\nManual preprod deployment\n</code></pre>"},{"location":"architecture/overview/#recommended-future","title":"Recommended (Future)","text":"<pre><code>develop branch (preprod)\n       \u2193\nTest automatically\n       \u2193\nmain branch (prod)\n       \u2193\nTag release (v1.0.0)\n       \u2193\nDeploy to production\n</code></pre>"},{"location":"architecture/overview/#scalability","title":"\ud83d\udcc8 Scalability","text":""},{"location":"architecture/overview/#current-capacity","title":"Current Capacity","text":"<ul> <li>\u2705 Single repo with unlimited issues</li> <li>\u2705 Parallel workflow execution (GitHub Actions standard)</li> <li>\u2705 Claude API calls limited by rate limits</li> </ul>"},{"location":"architecture/overview/#growth-path","title":"Growth Path","text":"<ol> <li>Add more agents (Security Scanner, Performance Profiler)</li> <li>Multi-repo support via GitHub Organization</li> <li>Custom webhooks for external integrations</li> <li>GitHub App for advanced permissions</li> </ol>"},{"location":"architecture/overview/#integration-points","title":"\ud83d\udd0c Integration Points","text":""},{"location":"architecture/overview/#external-services","title":"External Services","text":"<ul> <li>Claude API (Anthropic) : Code review</li> <li>GitHub API : Repository operations</li> <li>GitHub GraphQL : Project updates (future)</li> </ul>"},{"location":"architecture/overview/#future-integrations","title":"Future Integrations","text":"<ul> <li>Slack/Discord webhooks</li> <li>Jira synchronization</li> <li>Cloud deployment (AWS, GCP, Azure)</li> <li>Container registry (Docker Hub, ECR)</li> </ul>"},{"location":"architecture/overview/#security-model","title":"\ud83d\udee1\ufe0f Security Model","text":""},{"location":"architecture/overview/#secrets-management","title":"Secrets Management","text":"<ul> <li>All API keys in GitHub Secrets (encrypted)</li> <li>Never in git history</li> <li>Rotatable per environment</li> </ul>"},{"location":"architecture/overview/#code-review","title":"Code Review","text":"<ul> <li>Non-blocking (informational)</li> <li>No auto-merge capability</li> <li>Human approval required</li> </ul>"},{"location":"architecture/overview/#access-control","title":"Access Control","text":"<ul> <li>Branch protection rules (recommended)</li> <li>Required status checks (tests)</li> <li>Required reviews (humans)</li> <li>Dismiss stale PR reviews</li> </ul>"},{"location":"architecture/overview/#metrics-monitoring","title":"\ud83d\udcca Metrics &amp; Monitoring","text":""},{"location":"architecture/overview/#available-metrics","title":"Available Metrics","text":"<ul> <li>Test pass/fail rate</li> <li>Code coverage %</li> <li>Average review time</li> <li>PR merge rate</li> <li>Issue velocity (points/sprint)</li> </ul>"},{"location":"architecture/overview/#monitoring-future","title":"Monitoring (Future)","text":"<ul> <li>Workflow execution time trends</li> <li>API cost tracking</li> <li>Performance regressions</li> <li>Security vulnerability scanning</li> </ul> <p>See Workflows for technical details on each workflow.</p>"},{"location":"architecture/workflows/","title":"GitHub Actions Workflows","text":""},{"location":"architecture/workflows/#overview","title":"\ud83d\udccb Overview","text":"<p>Five workflows manage the complete project lifecycle:</p> Workflow Trigger Purpose Duration create-branch.yml Issue labeled Auto-create feature branch &lt;10s ci-tests.yml Push/PR Run tests &amp; lint 2-5 min code-review-agent.yml PR opened AI code review 30-60s update-project.yml PR/Issue events Sync project board &lt;5s deploy-docs.yml Docs changed Build &amp; deploy MkDocs 1-2 min"},{"location":"architecture/workflows/#1-create-branchyml","title":"1\ufe0f\u20e3 create-branch.yml","text":""},{"location":"architecture/workflows/#purpose","title":"Purpose","text":"<p>Automatically creates a feature branch when <code>auto-branch</code> label is added to an issue.</p>"},{"location":"architecture/workflows/#trigger","title":"Trigger","text":"<pre><code>on:\n  issues:\n    types: [labeled]\n</code></pre>"},{"location":"architecture/workflows/#conditions","title":"Conditions","text":"<ul> <li>Label name == <code>auto-branch</code></li> <li>Repository has write permissions</li> </ul>"},{"location":"architecture/workflows/#process","title":"Process","text":"<pre><code>Issue labeled with \"auto-branch\"\n         \u2193\nExtract issue #123 and title\n         \u2193\nSlugify title: \"Add auth\" \u2192 \"add-auth\"\n         \u2193\nCreate branch: feat/123-add-auth\n         \u2193\nPush to origin\n         \u2193\nComment on issue with instructions\n</code></pre>"},{"location":"architecture/workflows/#outputs","title":"Outputs","text":"<ul> <li>Branch created on origin</li> <li>Comment posted with checkout instructions</li> <li>No changes to main branch</li> </ul>"},{"location":"architecture/workflows/#example","title":"Example","text":"<pre><code>Issue: #42 \"Implement payment system\"\n\u2193\nBranch created: feat/42-implement-payment-system\n\u2193\nComment:\n\u2705 Branch auto-created: `feat/42-implement-payment-system`\n\nNext steps:\n1. git checkout feat/42-implement-payment-system\n2. Make your changes\n3. Push and create a Pull Request\n</code></pre>"},{"location":"architecture/workflows/#customization","title":"Customization","text":"<p>Modify <code>BRANCH_NAME</code> pattern in the workflow: <pre><code># Current\nBRANCH_NAME=\"feat/${ISSUE_NUMBER}-${SLUGIFIED}\"\n\n# Alternative\nBRANCH_NAME=\"fix/${ISSUE_NUMBER}-${SLUGIFIED}\"  # For bugs\n</code></pre></p>"},{"location":"architecture/workflows/#2-ci-testsyml","title":"2\ufe0f\u20e3 ci-tests.yml","text":""},{"location":"architecture/workflows/#purpose_1","title":"Purpose","text":"<p>Run comprehensive code quality checks: formatting, linting, type checking, and tests.</p>"},{"location":"architecture/workflows/#triggers","title":"Triggers","text":"<pre><code>on:\n  push:\n    branches: [main, develop, staging]\n  pull_request:\n    branches: [main, develop]\n</code></pre>"},{"location":"architecture/workflows/#matrix-testing","title":"Matrix Testing","text":"<pre><code>matrix:\n  python-version: [\"3.11\"]\n</code></pre> <p>Extend to test multiple Python versions: <pre><code>matrix:\n  python-version: [\"3.9\", \"3.10\", \"3.11\", \"3.12\"]\n</code></pre></p>"},{"location":"architecture/workflows/#pipeline-steps","title":"Pipeline Steps","text":""},{"location":"architecture/workflows/#1-checkout-code","title":"1. Checkout Code","text":"<pre><code>- uses: actions/checkout@v4\n</code></pre>"},{"location":"architecture/workflows/#2-setup-python","title":"2. Setup Python","text":"<pre><code>- uses: actions/setup-python@v4\n  with:\n    python-version: ${{ matrix.python-version }}\n</code></pre>"},{"location":"architecture/workflows/#3-cache-dependencies","title":"3. Cache Dependencies","text":"<pre><code>- uses: actions/cache@v3\n  with:\n    path: ~/.cache/pip\n    key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}\n</code></pre>"},{"location":"architecture/workflows/#4-format-check-black","title":"4. Format Check (Black)","text":"<p><pre><code>black --check --line-length 100 src/ tests/\n</code></pre> - Verifies code formatting - Non-blocking (continue-on-error) - Suggests fixes if fails</p>"},{"location":"architecture/workflows/#5-lint-pylint","title":"5. Lint (Pylint)","text":"<p><pre><code>pylint src/ --disable=C0111,W0212 --fail-under=7.0\n</code></pre> - Checks code quality - Minimum score: 7.0/10 - Non-blocking</p>"},{"location":"architecture/workflows/#6-type-check-mypy","title":"6. Type Check (Mypy)","text":"<p><pre><code>mypy src/ --ignore-missing-imports\n</code></pre> - Static type validation - Catches type errors early - Non-blocking</p>"},{"location":"architecture/workflows/#7-run-tests","title":"7. Run Tests","text":"<p><pre><code>pytest tests/ \\\n  --cov=src/ \\\n  --cov-report=xml \\\n  --cov-report=html \\\n  --junitxml=test-results.xml\n</code></pre> - Executes all unit tests - Generates coverage reports - XML output for CI integration</p>"},{"location":"architecture/workflows/#8-report-results","title":"8. Report Results","text":"<pre><code># Comment on PR with results\ngh issue comment {PR} --body \"...\"\n</code></pre> <p>Example comment: <pre><code>## \u2705 Tests Passed\n\n- Tests: 127/127 passed \u2705\n- Coverage: 85%\n- Lint: OK (score: 8.5)\n- Build: \u2705\n\n---\n*Generated by GitHub Actions*\n</code></pre></p>"},{"location":"architecture/workflows/#build-job-optional","title":"Build Job (Optional)","text":"<p>If applicable, builds package distribution: <pre><code>python -m build\n</code></pre></p>"},{"location":"architecture/workflows/#failure-handling","title":"Failure Handling","text":"<ul> <li>\u274c Tests fail \u2192 Status: FAILURE</li> <li>\u26a0\ufe0f Lint warns \u2192 Status: SUCCESS (non-blocking)</li> <li>\ud83d\udd34 Type errors \u2192 Status: SUCCESS (non-blocking)</li> </ul> <p>Note: Only tests are blocking by default.</p>"},{"location":"architecture/workflows/#configuration-examples","title":"Configuration Examples","text":""},{"location":"architecture/workflows/#increase-timeout","title":"Increase Timeout","text":"<pre><code>timeout-minutes: 30\n</code></pre>"},{"location":"architecture/workflows/#test-specific-files","title":"Test Specific Files","text":"<pre><code>pytest tests/test_auth.py -v\n</code></pre>"},{"location":"architecture/workflows/#generate-html-coverage-report","title":"Generate HTML Coverage Report","text":"<p>Already done, accessible via: - Actions artifact \u2192 htmlcov/ - Or download locally</p>"},{"location":"architecture/workflows/#3-code-review-agentyml","title":"3\ufe0f\u20e3 code-review-agent.yml","text":""},{"location":"architecture/workflows/#purpose_2","title":"Purpose","text":"<p>Use Claude AI to automatically review pull requests and provide constructive feedback.</p>"},{"location":"architecture/workflows/#trigger_1","title":"Trigger","text":"<pre><code>on:\n  pull_request:\n    types: [opened, synchronize, reopened]\n</code></pre>"},{"location":"architecture/workflows/#requirements","title":"Requirements","text":"<ul> <li><code>CLAUDE_API_KEY</code> secret configured</li> <li>PR should be &lt; 10000 lines (limit)</li> <li>Python with anthropic library installed</li> </ul>"},{"location":"architecture/workflows/#process_1","title":"Process","text":"<pre><code>PR opened/updated\n     \u2193\nGet PR diff (via gh cli)\n     \u2193\nPrepare prompt with diff + PR description\n     \u2193\nCall Claude API with prompt\n     \u2193\nParse response (structured markdown)\n     \u2193\nPost as PR comment\n     \u2193\nUpdate project status \u2192 \"In QA\"\n</code></pre>"},{"location":"architecture/workflows/#prompt-structure","title":"Prompt Structure","text":"<pre><code>Review this GitHub PR code changes. Provide constructive feedback:\n\n**PR Title**: {title}\n**PR Description**: {description}\n\n**Code Changes**:\n```diff\n{diff}\n</code></pre> <p>Provide review with: 1. \u2705 Strengths 2. \u26a0\ufe0f Suggestions 3. \ud83d\udd34 Critical Issues <pre><code>### Claude Configuration\n```python\nclient = Anthropic()\nresponse = client.messages.create(\n    model=\"claude-3-5-sonnet-20241022\",\n    max_tokens=1024,\n    messages=[{\"role\": \"user\", \"content\": prompt}]\n)\n</code></pre></p>"},{"location":"architecture/workflows/#example-output","title":"Example Output","text":"<pre><code>## \ud83e\udd16 Automated Code Review by Claude AI\n\n### \u2705 Strengths\n- Good separation of concerns\n- Proper error handling\n- Clear variable names\n- Well-structured functions\n\n### \u26a0\ufe0f Suggestions\n- Consider adding docstrings to public functions\n- Use f-strings instead of .format()\n- Extract magic number 100 to named constant\n- Add more test cases for edge cases\n\n### \ud83d\udd34 Critical Issues\n- **Security**: Line 45 - SQL injection risk, use parameterized queries\n- **Performance**: Lines 30-35 - N+1 query problem in loop\n\n---\n*This is an informational review - approval is not required for merge*\n</code></pre>"},{"location":"architecture/workflows/#customization_1","title":"Customization","text":""},{"location":"architecture/workflows/#change-model","title":"Change Model","text":"<pre><code>model=\"claude-3-sonnet-20240229\",  # Other Claude versions\n# or\nmodel=\"gpt-4\",  # OpenAI fallback\n</code></pre>"},{"location":"architecture/workflows/#increasedecrease-detail","title":"Increase/Decrease Detail","text":"<pre><code>max_tokens=2048,  # More detailed review\nmax_tokens=512,   # Brief review\n</code></pre>"},{"location":"architecture/workflows/#custom-instructions","title":"Custom Instructions","text":"<p>Modify the prompt to focus on specific areas: <pre><code>prompt = f\"\"\"Review focusing on:\n1. Security vulnerabilities\n2. Performance optimizations\n3. Code style consistency\n\n{original_prompt}\n\"\"\"\n</code></pre></p>"},{"location":"architecture/workflows/#fallback-behavior","title":"Fallback Behavior","text":"<p>If <code>CLAUDE_API_KEY</code> not set: <pre><code>\u26a0\ufe0f Code review workflow encountered an error\n\nAdd CLAUDE_API_KEY to GitHub Secrets to enable full AI-powered review.\n</code></pre></p>"},{"location":"architecture/workflows/#4-update-projectyml","title":"4\ufe0f\u20e3 update-project.yml","text":""},{"location":"architecture/workflows/#purpose_3","title":"Purpose","text":"<p>Synchronize GitHub Projects v2 board with issue and PR updates.</p>"},{"location":"architecture/workflows/#triggers_1","title":"Triggers","text":"<pre><code>on:\n  push:\n    branches: [main, develop, staging]\n  pull_request:\n    types: [opened, synchronize, closed]\n  issues:\n    types: [opened, closed, labeled, unlabeled]\n</code></pre>"},{"location":"architecture/workflows/#process_2","title":"Process","text":""},{"location":"architecture/workflows/#on-pr-open","title":"On PR Open","text":"<pre><code>PR created\n     \u2193\nExtract issue number from \"Closes #123\" in PR body\n     \u2193\nUpdate project item status \u2192 \"In QA\"\n     \u2193\nLog the update\n</code></pre>"},{"location":"architecture/workflows/#on-pr-close-merged","title":"On PR Close (Merged)","text":"<pre><code>PR merged to main\n     \u2193\nFind linked issue\n     \u2193\nUpdate status \u2192 \"Done\"\n     \u2193\nClose issue if applicable\n</code></pre>"},{"location":"architecture/workflows/#on-push","title":"On Push","text":"<pre><code>Commit pushed to branch\n     \u2193\nUpdate project item timestamps\n     \u2193\nRefresh board view\n</code></pre>"},{"location":"architecture/workflows/#on-issue-event","title":"On Issue Event","text":"<pre><code>Issue created/updated/labeled\n     \u2193\nSync with project board\n     \u2193\nUpdate relevant fields\n</code></pre>"},{"location":"architecture/workflows/#current-limitations","title":"Current Limitations","text":"<ul> <li>Basic logging and status tracking</li> <li>Full GraphQL integration coming soon</li> </ul>"},{"location":"architecture/workflows/#future-enhancement","title":"Future Enhancement","text":"<pre><code># Planned GraphQL mutation\nmutation UpdateProjectStatus {\n  updateProjectV2ItemFieldValue(input: {\n    projectId: \"ABC123\"\n    itemId: \"DEF456\"\n    fieldId: \"status\"\n    value: \"Done\"\n  }) {\n    projectV2Item { id }\n  }\n}\n</code></pre>"},{"location":"architecture/workflows/#5-deploy-docsyml","title":"5\ufe0f\u20e3 deploy-docs.yml","text":""},{"location":"architecture/workflows/#purpose_4","title":"Purpose","text":"<p>Automatically build and deploy MkDocs documentation to GitHub Pages.</p>"},{"location":"architecture/workflows/#trigger_2","title":"Trigger","text":"<pre><code>on:\n  push:\n    branches: [main, develop]\n    paths:\n      - 'docs/**'\n      - 'mkdocs.yml'\n      - '.github/workflows/deploy-docs.yml'\n  workflow_dispatch:  # Manual trigger\n</code></pre>"},{"location":"architecture/workflows/#process_3","title":"Process","text":"<pre><code>Changes pushed to docs/\n     \u2193\nWorkflow triggered\n     \u2193\nInstall MkDocs + Material theme\n     \u2193\nBuild static site (mkdocs build)\n     \u2193\nDeploy to gh-pages branch\n     \u2193\nGitHub Pages updated\n     \u2193\nSite available at https://dyvan.github.io/github-project-llm-management\n</code></pre>"},{"location":"architecture/workflows/#configuration","title":"Configuration","text":"<pre><code>- uses: peaceiris/actions-gh-pages@v3\n  with:\n    github_token: ${{ secrets.GITHUB_TOKEN }}\n    publish_dir: ./site\n</code></pre>"},{"location":"architecture/workflows/#github-pages-setup","title":"GitHub Pages Setup","text":"<ol> <li>Go to Settings \u2192 Pages</li> <li>Source: Deploy from a branch</li> <li>Branch: gh-pages</li> <li>Folder: / (root)</li> <li>Click Save</li> </ol> <p>Your docs will be live at: <pre><code>https://dyvan.github.io/github-project-llm-management\n</code></pre></p>"},{"location":"architecture/workflows/#custom-domain-optional","title":"Custom Domain (Optional)","text":"<p>Add to GitHub Pages settings: <pre><code>your-domain.com\n</code></pre></p> <p>Then update mkdocs.yml: <pre><code>site_url: https://your-domain.com\n</code></pre></p>"},{"location":"architecture/workflows/#workflow-management","title":"\ud83d\udd27 Workflow Management","text":""},{"location":"architecture/workflows/#enabledisable-workflows","title":"Enable/Disable Workflows","text":"<ol> <li>Go to Actions tab</li> <li>Click workflow name</li> <li>Click \u22ef menu \u2192 Disable/Enable</li> </ol>"},{"location":"architecture/workflows/#view-workflow-runs","title":"View Workflow Runs","text":"<pre><code>Actions \u2192 Workflow name \u2192 Click run to see details\n</code></pre>"},{"location":"architecture/workflows/#debug-failed-workflows","title":"Debug Failed Workflows","text":"<ol> <li>Click the failed run</li> <li>Click the failed job</li> <li>Expand steps to see logs</li> <li>Look for red text/error messages</li> </ol>"},{"location":"architecture/workflows/#run-workflow-manually","title":"Run Workflow Manually","text":"<pre><code>on:\n  workflow_dispatch:  # Allows manual trigger\n</code></pre> <p>Then: 1. Go to Actions \u2192 Workflow name 2. Click Run workflow 3. Select branch and click Run</p>"},{"location":"architecture/workflows/#secrets-for-workflows","title":"Secrets for Workflows","text":"<p>Add/update in Settings \u2192 Secrets and variables \u2192 Actions: - <code>CLAUDE_API_KEY</code> : Anthropic API key - <code>OPENAI_API_KEY</code> : OpenAI API key (optional) - <code>GEMINI_API_KEY</code> : Google Gemini API key (optional)</p> <p>Access in workflows: <pre><code>env:\n  CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}\n</code></pre></p>"},{"location":"architecture/workflows/#workflow-metrics","title":"\ud83d\udcca Workflow Metrics","text":""},{"location":"architecture/workflows/#execution-times","title":"Execution Times","text":"<ul> <li>Branch Creator: ~10 seconds</li> <li>CI Tests: 2-5 minutes</li> <li>Code Review: 30-60 seconds</li> <li>Update Project: &lt;5 seconds</li> <li>Deploy Docs: 1-2 minutes</li> </ul>"},{"location":"architecture/workflows/#cost-github-actions","title":"Cost (GitHub Actions)","text":"<ul> <li>Free tier: 2,000 minutes/month (public repos unlimited)</li> <li>Typical project: ~500 minutes/month</li> </ul>"},{"location":"architecture/workflows/#api-costs","title":"API Costs","text":"<ul> <li>Claude code review: ~$0.01-0.05 per review</li> <li>Typical monthly: $10-30 for active project</li> </ul>"},{"location":"architecture/workflows/#troubleshooting","title":"\ud83c\udd98 Troubleshooting","text":"Issue Cause Solution Workflow doesn't run Not enabled Enable in Actions tab API key error Secret not found Add to GitHub Secrets Tests timeout Too slow Optimize test suite PR not merging Checks failed Check workflow logs Docs not deploying Wrong branch Ensure gh-pages exists <p>Next: Agents Documentation</p>"},{"location":"getting-started/first-issue/","title":"Cr\u00e9er votre premi\u00e8re issue","text":"<p>Ce guide vous montre comment cr\u00e9er une premi\u00e8re issue et d\u00e9clencher les workflows automatiques.</p>"},{"location":"getting-started/first-issue/#etape-1-creer-une-issue","title":"\ud83c\udfaf \u00c9tape 1 : Cr\u00e9er une issue","text":""},{"location":"getting-started/first-issue/#via-linterface-github","title":"Via l'interface GitHub","text":"<ol> <li>Allez sur : https://github.com/dyvan/github-project-llm-management/issues</li> <li>Cliquez sur New issue</li> <li>S\u00e9lectionnez le template Feature Request</li> </ol>"},{"location":"getting-started/first-issue/#via-la-cli","title":"Via la CLI","text":"<pre><code>gh issue create \\\n  --title \"Implement user authentication\" \\\n  --body \"Add OAuth2 authentication system\n\n**Motivation**: Users need secure login\n\n**Acceptance Criteria**:\n- [ ] OAuth2 provider integration\n- [ ] Token refresh mechanism\n- [ ] Tests covering auth flow\" \\\n  --label \"type:feature\"\n</code></pre>"},{"location":"getting-started/first-issue/#remplissez-le-formulaire","title":"\ud83d\udcdd Remplissez le formulaire","text":"<p>Exemple de Feature Request :</p> <pre><code>Title: Add dark mode toggle\n\nDescription:\nUsers want a dark mode option for accessibility and reduced eye strain.\n\nMotivation:\n- Improve accessibility for users with light sensitivity\n- Reduce eye strain during night usage\n- Follow modern app standards\n\nAcceptance Criteria:\n- [ ] Toggle switch in settings\n- [ ] Theme persists in localStorage\n- [ ] Works across all pages\n- [ ] Tests cover both themes\n- [ ] Documentation updated\n</code></pre>"},{"location":"getting-started/first-issue/#ajouter-le-label-auto-branch","title":"\ud83c\udff7\ufe0f Ajouter le label <code>auto-branch</code>","text":""},{"location":"getting-started/first-issue/#via-linterface","title":"Via l'interface","text":"<ol> <li>Dans l'issue, cliquez sur Labels</li> <li>Cherchez <code>auto-branch</code></li> <li>Cliquez dessus pour l'ajouter</li> </ol>"},{"location":"getting-started/first-issue/#resultat-attendu","title":"R\u00e9sultat attendu","text":"<p>Imm\u00e9diatement apr\u00e8s avoir ajout\u00e9 le label :</p> <p>\u2705 Le Branch Creator se d\u00e9clenche</p> <pre><code>\u2705 Branch auto-created: `feat/1-add-dark-mode-toggle`\n\n**Next steps:**\n1. Clone the repository and checkout the branch:\n   git checkout feat/1-add-dark-mode-toggle\n2. Make your changes\n3. Push and create a Pull Request\n4. The Code Review Agent will automatically review your PR\n\n---\nCreated by GitHub Actions\n</code></pre>"},{"location":"getting-started/first-issue/#verifier-dans-le-project-board","title":"\ud83d\udcca V\u00e9rifier dans le Project Board","text":"<ol> <li>Allez \u00e0 l'onglet Projects</li> <li>S\u00e9lectionnez votre Project Board</li> <li>Votre issue appara\u00eet dans Backlog</li> </ol> <p>Colonnes visibles : - Title: \"Add dark mode toggle\" - Priority: Medium - Effort: 5 - Status: Backlog - Owner: (vous)</p>"},{"location":"getting-started/first-issue/#developper-localement","title":"\ud83d\udcbb D\u00e9velopper localement","text":"<p>Une fois la branche cr\u00e9\u00e9e, vous pouvez commencer :</p> <pre><code># Cloner le repo (si pas encore fait)\ngit clone https://github.com/dyvan/github-project-llm-management.git\ncd github-project-llm-management\n\n# Checker la branche\ngit checkout feat/1-add-dark-mode-toggle\n\n# D\u00e9velopper\necho \"export const darkMode = true;\" &gt; src/theme.js\n\n# Commit\ngit add .\ngit commit -m \"feat: Add dark mode toggle\n\n- Implement toggle component\n- Add theme CSS variables\n- Save preference in localStorage\"\n\n# Push\ngit push origin feat/1-add-dark-mode-toggle\n</code></pre>"},{"location":"getting-started/first-issue/#ouvrir-une-pull-request","title":"\ud83d\udd04 Ouvrir une Pull Request","text":""},{"location":"getting-started/first-issue/#via-linterface_1","title":"Via l'interface","text":"<ol> <li>Vous verrez un banner \"Compare &amp; pull request\"</li> <li>Cliquez dessus</li> <li>Remplissez le template :</li> </ol> <pre><code>## Description\nAdded dark mode toggle to settings page.\n\n## Issue\nCloses #1\n\n## Type of change\n- [x] Feature\n\n## Checklist\n- [x] Tests added\n- [x] Documentation updated\n- [x] Lint passed\n</code></pre> <ol> <li>Cliquez Create pull request</li> </ol>"},{"location":"getting-started/first-issue/#workflows-automatiques-se-declenchent","title":"Workflows automatiques se d\u00e9clenchent","text":""},{"location":"getting-started/first-issue/#1-code-review-agent","title":"1\ufe0f\u20e3 Code Review Agent","text":"<p>Dans ~30 secondes :</p> <pre><code>## \ud83e\udd16 Automated Code Review by Claude AI\n\n### \u2705 Strengths\n- Clean component structure\n- Good use of React hooks\n\n### \u26a0\ufe0f Suggestions\n- Add error boundary wrapper\n- Consider memoization for performance\n\n### \ud83d\udd34 Critical Issues\nNone found!\n</code></pre>"},{"location":"getting-started/first-issue/#2-ci-tests","title":"2\ufe0f\u20e3 CI Tests","text":"<p>Dans ~1 minute :</p> <pre><code>## \u2705 Tests Passed\n\n- Tests: 45/45 \u2705\n- Coverage: 87%\n- Lint: OK\n- Build: \u2705\n</code></pre>"},{"location":"getting-started/first-issue/#3-project-board-update","title":"3\ufe0f\u20e3 Project Board Update","text":"<p>Status change : Backlog \u2192 In QA</p>"},{"location":"getting-started/first-issue/#merger-la-pr","title":"\u2705 Merger la PR","text":""},{"location":"getting-started/first-issue/#conditions-de-merge","title":"Conditions de merge","text":"<ul> <li>\u2705 Code Review complet\u00e9e</li> <li>\u2705 Tous les tests passent</li> <li>\u2705 Approuv\u00e9e par un mainteneur</li> </ul>"},{"location":"getting-started/first-issue/#merger-via-interface","title":"Merger via interface","text":"<ol> <li>Allez \u00e0 votre PR</li> <li>Cliquez Merge pull request</li> <li>Choisissez la strat\u00e9gie :</li> <li>Create a merge commit (recommended)</li> <li>Squash and merge</li> <li>Rebase and merge</li> <li>Cliquez Confirm merge</li> </ol>"},{"location":"getting-started/first-issue/#resultat-final","title":"R\u00e9sultat final","text":"<ul> <li>\u2705 Branche merg\u00e9e en <code>main</code></li> <li>\u2705 Project status : Done</li> <li>\u2705 Issue ferm\u00e9e automatiquement (Closes #1)</li> <li>\ud83c\udf89 Feature d\u00e9ploy\u00e9e !</li> </ul>"},{"location":"getting-started/first-issue/#checklist-recapitulatif","title":"\ud83d\udccb Checklist r\u00e9capitulatif","text":"<p>Vous venez de :</p> <ul> <li>[ ] Cr\u00e9er une issue avec un template</li> <li>[ ] Ajouter le label <code>auto-branch</code></li> <li>[ ] Branch auto-cr\u00e9\u00e9e</li> <li>[ ] D\u00e9velopp\u00e9 localement</li> <li>[ ] Pushez les changements</li> <li>[ ] Ouvert une PR</li> <li>[ ] Code Review Agent comment\u00e9</li> <li>[ ] CI Tests pass\u00e9s</li> <li>[ ] PR approuv\u00e9e</li> <li>[ ] Merg\u00e9e en main</li> <li>[ ] Issue ferm\u00e9e</li> <li>[ ] Project Board mis \u00e0 jour</li> </ul> <p>Bravo ! Vous ma\u00eetrisez le workflow complet ! \ud83d\ude80</p>"},{"location":"getting-started/first-issue/#prochaines-etapes","title":"\ud83c\udf93 Prochaines \u00e9tapes","text":"<ul> <li>Explorez les agents LLM</li> <li>Configurez des webhooks Slack</li> <li>Customisez les workflows</li> </ul>"},{"location":"getting-started/installation/","title":"Installation Guide","text":""},{"location":"getting-started/installation/#system-requirements","title":"System Requirements","text":"<ul> <li>Git: 2.30+</li> <li>GitHub Account: With repository admin access</li> <li>GitHub CLI: <code>gh</code> 2.0+</li> <li>Python: 3.11+ (if using Python workflows)</li> </ul>"},{"location":"getting-started/installation/#step-1-clone-the-repository","title":"Step 1: Clone the Repository","text":"<pre><code># Clone this template\ngit clone https://github.com/your-org/project-llm-management.git\ncd project-llm-management\n\n# Or fork and clone your fork\ngit clone https://github.com/YOUR_USERNAME/project-llm-management.git\n</code></pre>"},{"location":"getting-started/installation/#step-2-install-dependencies-optional","title":"Step 2: Install Dependencies (Optional)","text":"<p>If you want to run workflows locally for testing:</p> <pre><code># Python dependencies\npip install -r requirements.txt\n\n# Development tools (for local testing)\npip install pytest black pylint mypy mkdocs mkdocs-material\n</code></pre>"},{"location":"getting-started/installation/#step-3-configure-github-secrets","title":"Step 3: Configure GitHub Secrets","text":"<p>Navigate to your repository settings:</p> <p>Settings \u2192 Secrets and variables \u2192 Actions</p> <p>Add the following secrets:</p>"},{"location":"getting-started/installation/#required-secrets","title":"Required Secrets","text":""},{"location":"getting-started/installation/#github_token","title":"<code>GITHUB_TOKEN</code>","text":"<p>GitHub automatically provides this, but you can also create a Personal Access Token:</p> <pre><code>gh auth login\n# Select: GitHub.com\n# Select: HTTPS\n# Authenticate with browser\n</code></pre>"},{"location":"getting-started/installation/#claude_api_key-for-code-review","title":"<code>CLAUDE_API_KEY</code> (for Code Review)","text":"<ol> <li>Get your API key from console.anthropic.com</li> <li>Add it to your repo secrets:</li> </ol> <pre><code>gh secret set CLAUDE_API_KEY --body \"sk-ant-...\"\n</code></pre>"},{"location":"getting-started/installation/#optional-secrets","title":"Optional Secrets","text":""},{"location":"getting-started/installation/#openai_api_key-alternative-to-claude","title":"<code>OPENAI_API_KEY</code> (Alternative to Claude)","text":"<pre><code>gh secret set OPENAI_API_KEY --body \"sk-...\"\n</code></pre>"},{"location":"getting-started/installation/#gemini_api_key-alternative-to-claude","title":"<code>GEMINI_API_KEY</code> (Alternative to Claude)","text":"<pre><code>gh secret set GEMINI_API_KEY --body \"AIza...\"\n</code></pre>"},{"location":"getting-started/installation/#step-4-enable-github-projects-v2","title":"Step 4: Enable GitHub Projects v2","text":"<ol> <li>Go to your repository</li> <li>Click the Projects tab</li> <li>Click New project</li> <li>Select Table or Board view</li> <li>Name it: <code>Project Board</code></li> <li>Create the project</li> </ol>"},{"location":"getting-started/installation/#step-5-configure-project-fields","title":"Step 5: Configure Project Fields","text":""},{"location":"getting-started/installation/#custom-fields-to-create","title":"Custom Fields to Create","text":"<p>In the project settings, add these fields:</p> Field Name Type Values Priority Single select Low, Medium, High Effort Single select 1, 2, 3, 5, 8 Status Single select Backlog, In Progress, In QA, Done Owner People Auto (from assignee) Sprint Text v1.0, v2.0, etc. Environment Single select dev, preprod, prod"},{"location":"getting-started/installation/#create-views","title":"Create Views","text":""},{"location":"getting-started/installation/#1-backlog-table","title":"1. Backlog (Table)","text":"<ul> <li>Columns: Title, Priority, Effort, Owner, Status</li> <li>Filter: Status != \"Done\"</li> <li>Sort: Created date (oldest first)</li> </ul>"},{"location":"getting-started/installation/#2-priority-board-kanban","title":"2. Priority Board (Kanban)","text":"<ul> <li>Group by: Status</li> <li>Filter: Priority = High OR Medium</li> <li>Sort: Priority (highest first)</li> </ul>"},{"location":"getting-started/installation/#3-team-items-table","title":"3. Team Items (Table)","text":"<ul> <li>Columns: Title, Owner, Sprint, Status, Due Date</li> <li>Filter: Owner = me (for personal view)</li> </ul>"},{"location":"getting-started/installation/#step-6-configure-workflows","title":"Step 6: Configure Workflows","text":"<p>Most workflows are pre-configured, but verify they're enabled:</p> <p>Settings \u2192 Actions \u2192 General</p> <p>Ensure: - \u2705 Actions workflows are enabled - \u2705 Read/write permissions for Actions</p>"},{"location":"getting-started/installation/#step-7-test-the-setup","title":"Step 7: Test the Setup","text":""},{"location":"getting-started/installation/#create-a-test-issue","title":"Create a test issue","text":"<pre><code>gh issue create \\\n  --title \"Test: Setup verification\" \\\n  --body \"Testing the workflow setup\" \\\n  --label \"auto-branch\"\n</code></pre> <p>This should automatically: 1. Create a branch: <code>feat/1-test-setup-verification</code> 2. Post a comment with checkout instructions 3. Trigger the CI workflow</p>"},{"location":"getting-started/installation/#verify-workflows-ran","title":"Verify workflows ran","text":"<pre><code>gh run list --workflow ci-tests.yml\ngh run list --workflow create-branch.yml\n</code></pre>"},{"location":"getting-started/installation/#step-8-configure-mkdocs-documentation","title":"Step 8: Configure MkDocs (Documentation)","text":"<pre><code># Install MkDocs\npip install mkdocs mkdocs-material\n\n# Build docs locally\nmkdocs build\n\n# Serve locally\nmkdocs serve\n# Visit http://localhost:8000\n</code></pre>"},{"location":"getting-started/installation/#deploy-to-github-pages","title":"Deploy to GitHub Pages","text":"<p>The workflow <code>.github/workflows/deploy-docs.yml</code> automatically deploys when you push to <code>docs/</code>:</p> <ol> <li>Go to Settings \u2192 Pages</li> <li>Set source to Deploy from a branch</li> <li>Select gh-pages branch</li> <li>Save</li> </ol> <p>Your docs will be available at: <code>https://your-username.github.io/project-llm-management</code></p>"},{"location":"getting-started/installation/#step-9-create-development-environment","title":"Step 9: Create Development Environment","text":""},{"location":"getting-started/installation/#python-virtual-environment","title":"Python Virtual Environment","text":"<pre><code>python -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\npip install -r requirements.txt\n</code></pre>"},{"location":"getting-started/installation/#install-pre-commit-hooks-optional","title":"Install Pre-commit Hooks (Optional)","text":"<pre><code>pip install pre-commit\npre-commit install\n</code></pre>"},{"location":"getting-started/installation/#step-10-verify-installation","title":"Step 10: Verify Installation","text":"<p>Run this checklist:</p> <ul> <li>[ ] Repository cloned/forked locally</li> <li>[ ] GitHub secrets configured</li> <li>[ ] GitHub Projects v2 created</li> <li>[ ] Workflows enabled</li> <li>[ ] Test issue created and branch auto-created</li> <li>[ ] MkDocs documentation built</li> <li>[ ] Local development environment set up</li> </ul>"},{"location":"getting-started/installation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/installation/#issue-workflows-not-running","title":"Issue: Workflows not running","text":"<p>Solution: Check Settings \u2192 Actions \u2192 General \u2192 ensure workflows are enabled</p>"},{"location":"getting-started/installation/#issue-code-review-agent-not-working","title":"Issue: Code Review Agent not working","text":"<p>Solution: Verify <code>CLAUDE_API_KEY</code> is set correctly (no extra spaces)</p>"},{"location":"getting-started/installation/#issue-branch-not-created","title":"Issue: Branch not created","text":"<p>Solution: Ensure <code>auto-branch</code> label is added to the issue</p>"},{"location":"getting-started/installation/#issue-python-tests-fail","title":"Issue: Python tests fail","text":"<p>Solution: Install all dev dependencies: <code>pip install -r requirements.txt</code></p>"},{"location":"getting-started/installation/#next-steps","title":"Next Steps","text":"<ol> <li>\u2705 Quick Start Guide - Run your first workflow</li> <li>\ud83d\udcda Architecture Overview - Understand the system</li> <li>\ud83d\udcdd Contributing Guide - Start contributing</li> </ol> <p>Need help? Check the FAQ or Troubleshooting Guide</p>"},{"location":"getting-started/quickstart/","title":"Quick Start Guide","text":"<p>Get your first automated workflow running in 5 minutes!</p>"},{"location":"getting-started/quickstart/#prerequisites","title":"Prerequisites","text":"<ul> <li>Repository is installed</li> <li>GitHub secrets configured</li> <li>GitHub Projects v2 enabled</li> </ul>"},{"location":"getting-started/quickstart/#create-your-first-issue","title":"\ud83c\udfaf Create Your First Issue","text":""},{"location":"getting-started/quickstart/#step-1-open-github-issues","title":"Step 1: Open GitHub Issues","text":"<p>Navigate to your repository and click the Issues tab.</p>"},{"location":"getting-started/quickstart/#step-2-create-new-issue","title":"Step 2: Create New Issue","text":"<p>Click New issue \u2192 Select Feature Request</p>"},{"location":"getting-started/quickstart/#step-3-fill-the-form","title":"Step 3: Fill the Form","text":"<pre><code>Title: Add user profile page\n\nDescription:\n- Display user information\n- Show user statistics\n- Allow profile editing\n\nMotivation: Users want to see and manage their profile data\n\nAcceptance Criteria:\n- [ ] Profile page displays user info\n- [ ] Statistics are shown\n- [ ] Edit functionality works\n\nPriority: Medium\nEffort: 5\n</code></pre>"},{"location":"getting-started/quickstart/#step-4-submit-issue","title":"Step 4: Submit Issue","text":"<p>Click Submit new issue</p>"},{"location":"getting-started/quickstart/#trigger-the-branch-creator","title":"\ud83e\udd16 Trigger the Branch Creator","text":""},{"location":"getting-started/quickstart/#step-1-go-to-issue-details","title":"Step 1: Go to Issue Details","text":"<p>Click on the issue you just created.</p>"},{"location":"getting-started/quickstart/#step-2-add-label","title":"Step 2: Add Label","text":"<p>Click Labels \u2192 Select <code>auto-branch</code></p>"},{"location":"getting-started/quickstart/#step-3-watch-the-magic","title":"Step 3: Watch the Magic \u2728","text":"<p>The Branch Creator workflow will: 1. \u23f3 Run (check Actions tab) 2. \ud83d\udcdd Create a comment with your branch name 3. \ud83c\udf3f Push the new branch to GitHub</p> <p>Comment example: <pre><code>\u2705 Branch auto-created: `feat/123-add-user-profile-page`\n\nNext steps:\n1. git checkout feat/123-add-user-profile-page\n2. Make your changes\n3. Push and create a Pull Request\n</code></pre></p>"},{"location":"getting-started/quickstart/#develop-locally","title":"\ud83d\udcbb Develop Locally","text":""},{"location":"getting-started/quickstart/#step-1-check-out-the-branch","title":"Step 1: Check Out the Branch","text":"<pre><code>git pull origin\ngit checkout feat/123-add-user-profile-page\n</code></pre>"},{"location":"getting-started/quickstart/#step-2-make-your-changes","title":"Step 2: Make Your Changes","text":"<pre><code># Edit files\nnano src/app.py\n\n# Create a simple example file\ncat &gt; src/profile.py &lt;&lt; 'EOF'\ndef get_user_profile(user_id):\n    \"\"\"Get user profile by ID.\"\"\"\n    return {\"id\": user_id, \"name\": \"John Doe\"}\n\ndef update_profile(user_id, data):\n    \"\"\"Update user profile.\"\"\"\n    # Implementation\n    pass\nEOF\n</code></pre>"},{"location":"getting-started/quickstart/#step-3-run-tests-locally-optional","title":"Step 3: Run Tests Locally (Optional)","text":"<pre><code>pytest tests/\nblack src/\npylint src/\nmypy src/\n</code></pre>"},{"location":"getting-started/quickstart/#step-4-commit-and-push","title":"Step 4: Commit and Push","text":"<pre><code>git add .\ngit commit -m \"feat: Add user profile page\n\n- Implement profile display\n- Add profile editing functionality\n- Update documentation\"\n\ngit push origin feat/123-add-user-profile-page\n</code></pre>"},{"location":"getting-started/quickstart/#create-a-pull-request","title":"\ud83d\udccb Create a Pull Request","text":""},{"location":"getting-started/quickstart/#step-1-open-pr-on-github","title":"Step 1: Open PR on GitHub","text":"<p>Navigate to your repository: - You'll see a Compare &amp; pull request button - Click it, or go to Pull requests \u2192 New pull request</p>"},{"location":"getting-started/quickstart/#step-2-select-branches","title":"Step 2: Select Branches","text":"<ul> <li>Base: <code>develop</code> (or your main branch)</li> <li>Compare: <code>feat/123-add-user-profile-page</code></li> </ul>"},{"location":"getting-started/quickstart/#step-3-fill-pr-description","title":"Step 3: Fill PR Description","text":"<p>Use the template provided:</p> <pre><code>## Description\nAdded user profile page with display and edit functionality.\n\n## Issue\nCloses #123\n\n## Type of change\n- [ ] Feature\n\n## Checklist\n- [x] Tests added\n- [x] Documentation updated\n- [x] Lint passed\n\n## Screenshots\n[Add screenshot if applicable]\n</code></pre>"},{"location":"getting-started/quickstart/#step-4-create-pull-request","title":"Step 4: Create Pull Request","text":"<p>Click Create pull request</p>"},{"location":"getting-started/quickstart/#automated-workflows-execute","title":"\ud83e\udd16 Automated Workflows Execute","text":""},{"location":"getting-started/quickstart/#code-review-agent","title":"Code Review Agent","text":"<p>What happens: - Claude AI analyzes your code - Posts feedback comment on PR</p> <p>Example comment: <pre><code>## \ud83e\udd16 Code Review by Claude AI\n\n### \u2705 Strengths\n- Good error handling\n- Clear function names\n\n### \u26a0\ufe0f Suggestions\n- Add type hints to functions\n- Extract magic number 100 to constant\n\n### \ud83d\udd34 Critical Issues\nNone found!\n</code></pre></p>"},{"location":"getting-started/quickstart/#ci-tests","title":"CI Tests","text":"<p>What happens: - Tests run: <code>pytest</code> - Lint check: <code>black</code>, <code>pylint</code>, <code>mypy</code> - Build test - Coverage report</p> <p>Example result: <pre><code>## \u2705 Tests Passed\n\n- Tests: 127/127 \u2705\n- Coverage: 85%\n- Lint: OK\n</code></pre></p>"},{"location":"getting-started/quickstart/#code-review-merge","title":"\u2705 Code Review &amp; Merge","text":""},{"location":"getting-started/quickstart/#step-1-address-feedback","title":"Step 1: Address Feedback","text":"<p>If Claude suggested improvements: <pre><code># Make changes\nnano src/profile.py\n\n# Commit\ngit commit -am \"refactor: Add type hints and improve error handling\"\ngit push\n</code></pre></p> <p>Tests will re-run automatically!</p>"},{"location":"getting-started/quickstart/#step-2-request-review","title":"Step 2: Request Review","text":"<p>Ask a team member to review: - Click Request a reviewer on PR - Mention team members: <code>@username</code></p>"},{"location":"getting-started/quickstart/#step-3-get-approval","title":"Step 3: Get Approval","text":"<p>Once approved and tests pass:</p> <p>Your team reviews and approves \u2192 \u2705</p>"},{"location":"getting-started/quickstart/#step-4-merge","title":"Step 4: Merge","text":"<p>Click Merge pull request</p> <p>Options: - Create a merge commit (recommended) - Squash and merge (for clean history) - Rebase and merge (for linear history)</p> <p>Then Confirm merge</p>"},{"location":"getting-started/quickstart/#project-board-updates","title":"\ud83d\udcca Project Board Updates","text":""},{"location":"getting-started/quickstart/#watch-your-issue-progress","title":"Watch Your Issue Progress","text":"<ol> <li>Navigate to Projects tab</li> <li>See your issue move through statuses:</li> <li>Backlog \u2192 (when created)</li> <li>In Progress \u2192 (when PR opened)</li> <li>In QA \u2192 (when tests run)</li> <li>Done \u2192 (when PR merged)</li> </ol>"},{"location":"getting-started/quickstart/#check-metrics","title":"Check Metrics","text":"<p>In the Priority Board view: - Priority: Medium \u2713 - Effort: 5 \u2713 - Owner: You \u2713 - Status: Done \u2713</p>"},{"location":"getting-started/quickstart/#success","title":"\ud83c\udf89 Success!","text":"<p>You just completed the full workflow:</p> <pre><code>Issue Created\n    \u2193\nBranch Auto-Created\n    \u2193\nCoded Locally\n    \u2193\nPR Submitted\n    \u2193\nCode Review (AI)\n    \u2193\nTests Passed\n    \u2193\nPR Merged\n    \u2193\nProject Updated\n</code></pre>"},{"location":"getting-started/quickstart/#whats-next","title":"\ud83d\udcda What's Next?","text":"<ul> <li>Architecture Guide - Learn how it works</li> <li>Using Agents - Advanced agent configuration</li> <li>Contributing - Start contributing to projects</li> <li>FAQ - Common questions and answers</li> </ul>"},{"location":"getting-started/quickstart/#tips","title":"\ud83d\udca1 Tips","text":""},{"location":"getting-started/quickstart/#naming-conventions","title":"Naming Conventions","text":"<ul> <li>Branch: <code>feat/{number}-{description}</code> (auto-created)</li> <li>Commits: <code>feat:</code>, <code>fix:</code>, <code>docs:</code>, <code>refactor:</code></li> <li>PRs: Reference issue: <code>Closes #123</code></li> </ul>"},{"location":"getting-started/quickstart/#best-practices","title":"Best Practices","text":"<ul> <li>Write clear issue descriptions</li> <li>Include acceptance criteria</li> <li>Link PRs to issues</li> <li>Keep commits focused and atomic</li> <li>Write meaningful commit messages</li> </ul>"},{"location":"getting-started/quickstart/#keyboard-shortcuts","title":"Keyboard Shortcuts","text":"<ul> <li><code>?</code> on GitHub \u2192 See keyboard shortcuts</li> <li><code>c</code> \u2192 Create issue/PR</li> <li><code>p</code> \u2192 Go to PRs</li> <li><code>g</code> \u2192 Go to issues</li> </ul> <p>Congratulations! You're ready to manage projects with LLM agents.</p> <p>For detailed guides, see the full documentation.</p>"}]}